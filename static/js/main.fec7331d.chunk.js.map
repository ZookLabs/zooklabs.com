{"version":3,"sources":["redux/userReducer.ts","redux/loginActionTypes.ts","api/api.ts","api/UserApi.ts","actions/AuthAction.ts","redux/userActions.ts","components/LoginButton.tsx","components/Menu.tsx","components/Home.tsx","components/Login.tsx","api/ZookApi.ts","components/Upload.tsx","components/Trial.tsx","components/LoadingZookImage.tsx","components/Zook.tsx","components/Zooks.tsx","components/Users.tsx","components/User.tsx","api/LeagueApi.ts","components/Leagues.tsx","components/League.tsx","api/AdminApi.ts","components/Register.tsx","components/Admin.tsx","components/Routes.tsx","App.tsx","serviceWorker.ts","redux/rootReducer.ts","index.tsx"],"names":["UserLoginState","LOGIN","REGISTER","LOGOUT","initialUserState","state","LoggedOut","http","axios","create","baseURL","process","headers","username","a","get","post","code","UserApi","useDispatchLogin","dispatch","useDispatch","useCallback","token","decodedToken","defaults","common","setAuthorization","type","useLogoutAction","useCookies","removeCookie","useLoginResponseAction","setCookie","dispatchLogin","response","authorizationHeader","authorization","startsWith","Error","exp","bearer","substring","length","jwt_decode","maxAge","Math","floor","Date","now","sameSite","LoginButton","userState","useSelector","user","logout","LoggedIn","Menu","position","to","activeClassName","className","isActive","_","pathname","Item","Button","active","onClick","primary","Registering","color","zookRegex","Container","exact","style","padding","src","alt","paddingLeft","test","href","Icon","name","inverted","Home","Segment","Group","Header","size","Login","login","loginResponseAction","loginUser","then","useLoginAction","location","useLocation","history","useHistory","useState","loggingIn","setLoggingIn","discordUrl","useEffect","URLSearchParams","search","replace","window","Loader","inline","push","id","withCredentials","formData","ZookApi","Upload","zookId","setZookId","loading","setLoading","fileValid","setFileValid","FormData","setFormData","uploadError","setUploadError","Table","compact","Row","HeaderCell","Body","Cell","error","Form","onSubmit","uploadZook","data","catch","Field","onChange","event","file","target","files","item","undefined","endsWith","append","accept","Message","header","icon","disabled","content","Trial","props","trial","extraStyle","trialName","score","measurement","disqualified","Label","LoadingZookImage","Image","onLoad","zookid","overallRowStyle","backgroundColor","Zook","zook","setZook","useParams","getZook","clearing","attached","floated","margin","identifier","Grid","stackable","Column","flex","minWidth","marginBottom","as","fluid","celled","striped","unstackable","colSpan","about","owner","dateCreated","dateUploaded","downloads","views","physical","height","width","weight","components","achievement","sprint","blockPush","hurdles","highJump","lap","overall","Zooks","zooks","getZooks","setState","this","zookItems","map","List","Link","Content","divided","selection","Component","Users","users","listUsers","userItems","User","setUser","getUser","signUpAt","lastLoginAt","league","LeagueApi","Leagues","leagues","setLeagues","getLeagues","leagueCard","description","Card","wrapped","ui","Placeholder","square","Description","columns","high_jump","block_push","overall_league","League","setLeague","getLeague","loader","title","secondary","paddingTop","paddingBottom","updatedAt","basic","selectable","collapsing","entries","display","verticalAlign","ownerId","patch","AdminApi","RegisterState","Admin","setUsers","ownerSetZookId","setOwnerSetZookId","ownerSetOwner","setOwnerSetOwner","updateOwnerResponse","setUpdateOwnerResponse","setOwner","widths","placeholder","inputMode","value","Dropdown","clearable","options","text","status","JSON","stringify","Register","availability","setAvailability","checkLoading","setCheckLoading","setUsername","usernameValid","setUsernameValid","register","registerUser","useRegisterAction","handleSubmit","Available","success","UnAvailable","checkUsername","available","Input","label","hidden","Routes","isRegistering","path","component","render","App","loginLoadAction","cookies","useLoginLoadAction","Boolean","hostname","match","rootReducer","combineReducers","action","store","createStore","devToolsEnhancer","ReactDOM","StrictMode","CookiesProvider","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.fec7331d.chunk.js","sourcesContent":["import {LOGIN, LoginActionTypes, LOGOUT, REGISTER} from \"./loginActionTypes\";\n\n\nexport enum UserLoginState {\n    LoggedOut,\n    LoggedIn,\n    Registering\n}\n\ninterface State {\n    state: UserLoginState\n}\n\ninterface LoggedIn extends State {\n    username: string\n    state: UserLoginState.LoggedIn\n}\n\n\ninterface LoggedOut extends State {\n    state: UserLoginState.LoggedOut\n}\n\ninterface Registering extends State {\n    state: UserLoginState.Registering\n}\n\nexport type UserState = LoggedIn | LoggedOut | Registering\n\nexport const isLoggedIn = (userState: UserState) => {\n    return userState.state === UserLoginState.LoggedIn\n}\n\nexport const isRegistering = (userState: UserState) => {\n    return userState.state === UserLoginState.Registering\n}\n\nexport const isLoggedOut = (userState: UserState) => {\n    return userState.state === UserLoginState.LoggedOut\n}\n\n\nexport const initialUserState: UserState = {\n    state: UserLoginState.LoggedOut\n}\n\nexport function userReducer(\n    state = initialUserState,\n    action: LoginActionTypes\n):  UserState {\n    switch (action.type) {\n        case LOGIN:\n            return {\n                state: UserLoginState.LoggedIn,\n                username: action.username\n            }\n        case REGISTER:\n            return {\n                state: UserLoginState.Registering\n            }\n        case LOGOUT:\n            return {\n                state: UserLoginState.LoggedOut\n            }\n        default:\n            return state\n    }\n}","export const LOGIN = 'LOGIN'\nexport const REGISTER = 'REGISTER'\nexport const LOGOUT = 'LOGOUT'\n\ninterface LoginAction {\n  type: typeof LOGIN\n  username: string\n}\n\ninterface RegisterAction {\n  type: typeof REGISTER\n}\n\ninterface LogoutAction {\n  type: typeof LOGOUT\n}\n\nexport type LoginActionTypes = LoginAction | RegisterAction | LogoutAction","import axios, {AxiosInstance} from 'axios';\n\nconst http: AxiosInstance = axios.create(\n    {\n        baseURL: `${process.env.REACT_APP_API_URL}/api`,\n        headers: {'Content-Type': 'application/json'},\n    });\n\nexport default http\n\nexport function removeAuthorization() {\n    // @ts-ignore\n    delete http.defaults.headers.common[\"Authorization\"]\n}\n\nexport function setAuthorization(token: string) {\n    // @ts-ignore\n    http.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`\n}\n\n","import {AxiosResponse} from \"axios\";\nimport {TAvailability} from \"../types/TAvailability\";\nimport http from \"./api\";\nimport {TUserIdentifier} from \"../types/TUserIdentifier\";\nimport {TUser} from \"../types/TUser\";\n\nnamespace UserApi {\n    export async function checkUsername(username: string): Promise<AxiosResponse<TAvailability>> {\n        return http.get<TAvailability>(`/login/availability/${username}`)\n    }\n\n    export async function registerUser(username: string): Promise<AxiosResponse> {\n        return http.post(`/login/register`, {username: username})\n    }\n\n    export async function loginUser(code: string): Promise<AxiosResponse> {\n        return http.get(`/login?code=${code}`)\n    }\n\n    export async function listUsers(): Promise<AxiosResponse<TUserIdentifier[]>> {\n        return http.get<TUserIdentifier[]>('/users')\n    }\n\n    export async function getUser(username: string): Promise<AxiosResponse<TUser>> {\n        return http.get<TUser>(`/users/${username}`)\n    }\n}\n\nexport default UserApi","import jwt_decode from \"jwt-decode\";\nimport {LoginUser, LogoutUser, RegisterUser} from \"../redux/userActions\";\nimport {useDispatch} from \"react-redux\";\nimport {useCookies} from \"react-cookie\";\nimport {removeAuthorization, setAuthorization} from \"../api/api\";\nimport {AxiosResponse} from \"axios\";\nimport UserApi from \"../api/UserApi\";\nimport {useCallback} from \"react\";\n\ntype JwtToken = {\n    username?: string\n    exp: number\n}\n\nconst getToken = (bearer: string) => bearer.substring(7, bearer.length)\n\nconst maxAge = (exp: number) => exp - Math.floor(Date.now() / 1000)\n\nexport function useDispatchLogin() {\n    const dispatch = useDispatch()\n    return useCallback((token: string, decodedToken: JwtToken) => {\n        setAuthorization(token)\n        if (decodedToken.username) {\n            dispatch(LoginUser(decodedToken.username))\n        } else {\n            dispatch(RegisterUser())\n        }\n    }, [dispatch])\n}\n\nexport function useLoginLoadAction() {\n    const [cookies] = useCookies(['token'])\n    const dispatchLogin = useDispatchLogin()\n\n    return useCallback(() => {\n        let token: string | undefined = cookies.token\n        if (token) {\n            let decodedToken = jwt_decode<JwtToken>(token)\n            dispatchLogin(token, decodedToken)\n        }\n    }, [cookies.token, dispatchLogin])\n}\n\nexport function useLogoutAction() {\n    const dispatch = useDispatch()\n    const [, , removeCookie] = useCookies()\n    return useCallback(() => {\n        removeAuthorization()\n        removeCookie(\"token\")\n        dispatch(LogoutUser())\n    }, [removeCookie, dispatch])\n}\n\n\nfunction useLoginResponseAction() {\n    const [, setCookie] = useCookies()\n    const dispatchLogin = useDispatchLogin()\n\n    return useCallback((response: AxiosResponse) => {\n        let authorizationHeader = response.headers.authorization\n        if (authorizationHeader && authorizationHeader.startsWith(\"Bearer \")) {\n\n            let token = getToken(authorizationHeader)\n            let decodedToken = jwt_decode<JwtToken>(token)\n\n            setCookie(\"token\", token, {maxAge: maxAge(decodedToken.exp), sameSite: \"strict\"})\n\n            dispatchLogin(token, decodedToken)\n        } else if (!authorizationHeader) {\n            throw new Error(\"authorization header missing\")\n        } else {\n            throw new Error(\"authorization header does not start with Bearer \")\n        }\n    }, [setCookie, dispatchLogin])\n}\n\nexport function useRegisterAction() {\n    const loginResponseAction = useLoginResponseAction()\n    return useCallback((username: string) => {\n        return UserApi.registerUser(username).then(loginResponseAction)\n    }, [loginResponseAction])\n}\n\nexport function useLoginAction() {\n    const loginResponseAction = useLoginResponseAction()\n    return useCallback((code: string) => {\n        return UserApi.loginUser(code).then(loginResponseAction)\n    }, [loginResponseAction])\n}\n\n","import {LOGIN, LoginActionTypes, LOGOUT, REGISTER} from \"./loginActionTypes\";\n\n\nexport function LoginUser(username: string): LoginActionTypes {\n  return {\n    type: LOGIN,\n    username: username\n  }\n}\n\nexport function RegisterUser(): LoginActionTypes {\n  return {\n    type: REGISTER\n  }\n}\n\nexport function LogoutUser(): LoginActionTypes {\n  return {\n    type: LOGOUT\n  }\n}","import {UserLoginState, UserState} from \"../redux/userReducer\";\nimport {Button, Menu as SMenu} from \"semantic-ui-react\";\nimport {NavLink} from \"react-router-dom\";\nimport React, {FC} from \"react\";\nimport {useLogoutAction} from \"../actions/AuthAction\";\nimport {useSelector} from \"react-redux\";\nimport {ApplicationState} from \"../redux/rootReducer\";\n\nconst LoginButton: FC = () => {\n\n    const userState = useSelector<ApplicationState, UserState>(state => state.user)\n\n    const logout = useLogoutAction()\n\n    switch (userState.state) {\n        case UserLoginState.LoggedIn:\n            let username = userState.username\n            return <SMenu.Menu position='right'>\n                <NavLink to={`/users/${username}`} activeClassName=\"active\" className=\"item\"\n                         isActive={(_, {pathname}) => {\n                             return `/users/${username}` === pathname\n                         }}\n                >{username}</NavLink>\n                <SMenu.Item>\n                    <Button active onClick={logout} primary>Logout</Button>\n                </SMenu.Item>\n            </SMenu.Menu>\n\n        case UserLoginState.LoggedOut:\n            return <SMenu.Menu position='right'>\n                <SMenu.Item>\n                    <NavLink to=\"/login\" activeClassName=\"active\" className=\"ui primary button\">Login</NavLink>\n                </SMenu.Item>\n            </SMenu.Menu>\n\n        case UserLoginState.Registering:\n            return <SMenu.Menu position='right'>\n                <SMenu.Item>\n                    <Button active onClick={logout} color='red' primary>Cancel</Button>\n                </SMenu.Item>\n            </SMenu.Menu>\n    }\n}\n\nexport default LoginButton","import React, {FC} from 'react'\nimport {Container, Icon, Menu as SMenu} from 'semantic-ui-react'\nimport {NavLink} from \"react-router-dom\";\nimport LoginButton from \"./LoginButton\";\n\n\nconst zookRegex = /^\\/zooks\\/?\\d*$/\n\nconst Menu: FC = () => {\n\n    return (\n        <Container>\n            <SMenu>\n                <NavLink to=\"/\" activeClassName=\"active\" className=\"item\" exact={true} style={{padding: 10}}>\n                    <img src={`${process.env.PUBLIC_URL}/logo.png`} alt={\"logo\"}/><b\n                    style={{paddingLeft: 10}}>ZookLabs</b></NavLink>\n                <NavLink to=\"/zooks\" activeClassName=\"active\" className=\"item\"\n                         isActive={(_, {pathname}) => {\n                             return zookRegex.test(pathname)\n                         }}\n                >Zooks</NavLink>\n                <NavLink to=\"/leagues\" activeClassName=\"active\" className=\"item\">Leagues</NavLink>\n                <NavLink to=\"/zooks/upload\" activeClassName=\"active\" className=\"item\" exact={true}>Upload</NavLink>\n                <NavLink to=\"/users\" activeClassName=\"active\" className=\"item\">Users</NavLink>\n                <LoginButton/>\n                <a className=\"discord item\" href=\"http://discord.zooklabs.com\"><Icon name='discord'\n                                                                                     inverted/>Discord</a>\n            </SMenu>\n        </Container>\n    )\n}\n\nexport default Menu\n","import React from 'react';\nimport {Header, Segment} from \"semantic-ui-react\";\n\nfunction Home() {\n    return (\n        <Segment.Group>\n            <Segment>\n                <Header size=\"huge\">\n                    Welcome To ZookLabs!\n                </Header>\n                {process.env.REACT_APP_WELCOME_MESSAGE}\n            </Segment>\n        </Segment.Group>\n    );\n}\n\nexport default Home;\n","import React, {FC, useEffect, useState} from 'react';\nimport {useHistory, useLocation} from \"react-router\";\n\nimport {ApplicationState} from \"../redux/rootReducer\";\nimport {useSelector} from \"react-redux\";\nimport {Loader, Segment} from \"semantic-ui-react\";\nimport {Redirect} from \"react-router-dom\";\nimport {UserLoginState, UserState} from \"../redux/userReducer\";\nimport {useLoginAction} from \"../actions/AuthAction\";\n\nconst Login: FC = () => {\n\n    const userState = useSelector<ApplicationState, UserState>(state => state.user)\n\n    const login: (code: string) => Promise<void> = useLoginAction()\n\n    const location = useLocation()\n    const history = useHistory()\n\n    const [loggingIn, setLoggingIn] = useState<boolean>(true);\n\n    const discordUrl = `https://discord.com/api/oauth2/authorize?client_id=${process.env.REACT_APP_DISCORD_CLIENT_ID}&redirect_uri=${process.env.REACT_APP_DISCORD_CALLBACK_URL}&response_type=code&scope=identify`\n\n    useEffect(() => {\n        if (loggingIn && userState.state === UserLoginState.LoggedOut) {\n            let code = new URLSearchParams(location.search).get(\"code\")\n            if (code) {\n                login(code).then(() => {\n                    history.replace(\"/login\")\n                    setLoggingIn(false)\n                })\n            } else {\n                setLoggingIn(false)\n            }\n        } else {\n            if (userState.state === UserLoginState.LoggedOut) {\n                window.location.replace(discordUrl)\n            }\n        }\n    }, [loggingIn, login, location.search, history, userState.state, discordUrl])\n\n    if (loggingIn) {\n        return <Segment><Loader active inline='centered'/></Segment>\n    } else {\n        switch (userState.state) {\n            case UserLoginState.LoggedOut:\n                return <Segment>\n                    Redirecting to Discord.\n                    <a href={discordUrl}>Not Redirecting? Click Here!</a>\n                    <Loader active inline='centered'/>\n                </Segment>\n\n            case UserLoginState.Registering:\n                return <Segment><Loader active inline='centered'/></Segment>\n            case UserLoginState.LoggedIn:\n                return <Redirect push to={`/users/${userState.username}`}/>\n        }\n    }\n}\n\nexport default Login\n","import {AxiosResponse} from \"axios\";\nimport {TZookIdentifier} from \"../types/TZookIdentifier\";\nimport http from \"./api\";\nimport {TUploadResponse} from \"../types/TUploadResponse\";\nimport {TZook} from \"../types/TZook\";\n\nnamespace ZookApi {\n    export async function getZooks(): Promise<AxiosResponse<TZookIdentifier[]>> {\n        return http.get<TZookIdentifier[]>('/zooks')\n    }\n\n    export async function getZook(id: string): Promise<AxiosResponse<TZook>> {\n        return http.get<TZook>(`zooks/${id}`, {withCredentials: true})\n    }\n\n    export async function uploadZook(formData: FormData): Promise<AxiosResponse<TUploadResponse>> {\n        return http.post('/zooks/upload', formData, {\n            headers: {\n                'Content-Type': 'multipart/form-data'\n            }\n        })\n    }\n}\n\nexport default ZookApi","import React, {FC, useState} from 'react'\nimport {Button, Form, Header, Icon, Message, Segment, Table} from 'semantic-ui-react'\nimport {Redirect} from 'react-router-dom';\nimport {AxiosError} from \"axios\";\nimport ZookApi from \"../api/ZookApi\";\n\ntype TUploadError = {\n    error: string\n}\n\nconst Upload: FC = () => {\n    const [zookId, setZookId] = useState<number>()\n    const [loading, setLoading] = useState<boolean>(false)\n    const [fileValid, setFileValid] = useState<boolean>(false)\n\n    const [formData, setFormData] = useState<FormData>(new FormData())\n\n    const [uploadError, setUploadError] = useState<string>()\n\n\n    const handleSubmit = () => {\n        if (formData.get('zook')) {\n            setLoading(true)\n            ZookApi.uploadZook(formData).then(response => {\n                    setZookId(response.data.id)\n                    setLoading(false)\n                }\n            ).catch((error: AxiosError<TUploadError>) => {\n                if (error.response) {\n                    setUploadError(error.response.data.error)\n                    setFileValid(false)\n                    setLoading(false)\n\n                } else {\n                    throw error\n                }\n            })\n        }\n    }\n\n    const fileChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        let file = event.target.files?.item(0)\n        setUploadError(undefined)\n        if (file && file.name.endsWith(\".zook\")) {\n            const formData = new FormData()\n            formData.append('zook', file)\n            setFormData(formData)\n            setFileValid(true)\n        } else {\n            setFileValid(false)\n        }\n    }\n\n    if (zookId) {\n        return <Redirect to={`/zooks/${zookId}`}/>\n    } else {\n        return (\n            <Segment.Group>\n                <Segment>\n                    <Header size='huge'>\n                        Zook Upload\n                    </Header>\n                </Segment>\n                <Segment>\n                    <Table compact color=\"orange\" inverted>\n                        <Table.Header>\n                            <Table.Row>\n                                <Table.HeaderCell><Icon name='attention'/> Upload Requirements</Table.HeaderCell>\n                            </Table.Row>\n                        </Table.Header>\n                        <Table.Body>\n                            <Table.Row>\n                                <Table.Cell error>\n                                    <Icon name='attention'/>Must have a Passport Photo</Table.Cell>\n                            </Table.Row>\n                            <Table.Row>\n                                <Table.Cell error>\n                                    <Icon name='attention'/>Does not support Street Rules</Table.Cell>\n                            </Table.Row>\n                        </Table.Body>\n                    </Table>\n                </Segment>\n                <Segment>\n                    <Form onSubmit={handleSubmit} loading={loading} error={!!uploadError}>\n                        <Form.Field error={!!uploadError}>\n                            <label>Zook File</label>\n                            <input type='file'\n                                   onChange={fileChange}\n                                   accept=\".zook\"/>\n                        </Form.Field>\n                        <Message\n                            error\n                            header={uploadError}\n                        />\n                        <Button type=\"submit\" color='blue' icon=\"upload\" disabled={!fileValid} content=\"Upload Zook\"/>\n                    </Form>\n                </Segment>\n            </Segment.Group>\n        )\n    }\n}\n\nexport default Upload","import React, {FC} from \"react\";\nimport {Label, Table} from \"semantic-ui-react\";\n\nexport type TZookTrial = {\n    score: number\n    position: number\n    disqualified: boolean\n}\n\ntype ITrialProps = {\n    trialName: string\n    trial?: TZookTrial\n    measurement: string\n    extraStyle?: object\n}\n\nconst Trial: FC<ITrialProps> = (props) => {\n    if (props.trial) {\n        const position = (trial: TZookTrial) => {\n            if (trial.disqualified) {\n                return <Label color=\"red\">DISQUALIFIED</Label>\n            } else if (trial.position === 2147483647) {\n                return '--'\n            }\n            return trial.position\n        }\n        return (\n            <Table.Row style={props.extraStyle}>\n                <Table.Cell>{props.trialName}</Table.Cell>\n                <Table.Cell>{props.trial.score} {props.measurement}</Table.Cell>\n                <Table.Cell>{position(props.trial)}</Table.Cell>\n            </Table.Row>\n        )\n    } else {\n        return (\n            <Table.Row>\n                <Table.Cell>{props.trialName}</Table.Cell>\n                <Table.Cell>N/A</Table.Cell>\n                <Table.Cell>N/A</Table.Cell>\n            </Table.Row>\n        )\n    }\n}\n\nexport default Trial\n","import React, {FC, useState} from \"react\";\nimport {Image} from \"semantic-ui-react\";\n\ninterface LoadingZookImageProps {\n    zookid: number,\n    alt?: string\n}\n\nconst LoadingZookImage: FC<LoadingZookImageProps & React.HTMLProps<HTMLDivElement>> = (props) => {\n\n    const [loading, setLoading] = useState<Boolean>(true)\n\n    let loaded = () => {\n        setLoading(false)\n    }\n\n    let imageClass: () => string = () => {\n        if (loading) {\n            return \"square image\"\n        } else {\n            return \"\"\n        }\n    }\n\n    return <>\n        <div {...props} className=\"ui placeholder\" >\n            <Image className={imageClass()} onLoad={loaded}\n                   src={`${process.env.REACT_APP_STATIC_URL}/zooks/${props.zookid}/image.png`} alt={props.alt}/>\n        </div>\n    </>\n\n}\n\nexport default LoadingZookImage","import React, {FC, useEffect, useState} from 'react';\nimport Trial from \"./Trial\";\nimport {Grid, Header, Loader, Segment, Table} from 'semantic-ui-react';\nimport Button from \"semantic-ui-react/dist/commonjs/elements/Button\";\nimport {useParams} from \"react-router\";\nimport {Link} from \"react-router-dom\";\nimport LoadingZookImage from \"./LoadingZookImage\";\nimport ZookApi from \"../api/ZookApi\";\nimport {TZook} from \"../types/TZook\";\n\n\ninterface RouteParams {\n    id: string\n}\n\nlet overallRowStyle = {\n    backgroundColor: \"#2185d0\",\n    color: \"#FFF\"\n};\n\nconst Zook: FC = () => {\n    const [zook, setZook] = useState<TZook>();\n    let {id} = useParams<RouteParams>()\n\n    useEffect(() => {\n        ZookApi.getZook(id).then(response =>\n            setZook(response.data)\n        )\n    }, [id])\n\n    if (!zook) {\n        return <Loader active inline='centered'/>;\n    } else {\n\n        const owner = () => {\n            if (zook.about.owner) {\n                return (<Table.Cell>\n                    <Link to={`/users/${zook.about.owner.username}`}>{zook.about.owner.username}</Link>\n                </Table.Cell>)\n            } else {\n                return <Table.Cell>Anonymous</Table.Cell>\n            }\n        }\n        return (\n            <Segment.Group>\n                <Segment clearing attached='top'>\n                    <Header floated=\"left\" size='huge' style={{margin: 0}}>\n                        Zook Name: {zook.identifier.name}\n                    </Header>\n                    <Header floated=\"right\" size='huge'>\n                        Zook ID: {zook.identifier.id}\n                    </Header>\n                </Segment>\n                <Segment attached>\n                    <Grid stackable>\n                        <div className=\"two column row ui segment attached\">\n                            <Grid.Column style={{flex: \"0\"}}>\n                                <div style={{minWidth: 256}}>\n                                    <LoadingZookImage zookid={zook.identifier.id} alt={zook.identifier.name}\n                                                      style={{marginBottom: 10}}/>\n                                    <Button color='blue' as=\"a\" icon=\"download\" fluid\n                                            content=\"Download Zook\"\n                                            href={`${process.env.REACT_APP_API_URL}/static/zooks/${zook.identifier.id}/${zook.identifier.name}`}/>\n                                </div>\n                            </Grid.Column>\n                            <Grid.Column style={{flex: \"1\"}}>\n                                <Table celled striped unstackable color=\"green\">\n                                    <Table.Header>\n                                        <Table.Row>\n                                            <Table.HeaderCell colSpan='2'>About</Table.HeaderCell>\n                                        </Table.Row>\n                                    </Table.Header>\n                                    <Table.Body>\n                                        <Table.Row>\n                                            <Table.Cell>Owner</Table.Cell>\n                                            {owner()}\n                                        </Table.Row>\n                                        <Table.Row>\n                                            <Table.Cell>Birth/Adoption date</Table.Cell>\n                                            <Table.Cell>{zook.about.dateCreated}</Table.Cell>\n                                        </Table.Row>\n                                        <Table.Row>\n                                            <Table.Cell>Date of Upload</Table.Cell>\n                                            <Table.Cell>{zook.about.dateUploaded}</Table.Cell>\n                                        </Table.Row>\n                                        <Table.Row>\n                                            <Table.Cell>Number of Downloads</Table.Cell>\n                                            <Table.Cell>{zook.about.downloads}</Table.Cell>\n                                        </Table.Row>\n                                        <Table.Row>\n                                            <Table.Cell>Number of times viewed</Table.Cell>\n                                            <Table.Cell>{zook.about.views}</Table.Cell>\n                                        </Table.Row>\n                                    </Table.Body>\n                                </Table>\n                            </Grid.Column>\n                        </div>\n                        <div className=\"column row ui segment attached\">\n                            <Grid.Column>\n                                <Table celled striped unstackable color=\"green\">\n                                    <Table.Header>\n                                        <Table.Row>\n                                            <Table.HeaderCell colSpan='2'>Physical Information</Table.HeaderCell>\n                                        </Table.Row>\n                                    </Table.Header>\n                                    <Table.Body>\n                                        <Table.Row>\n                                            <Table.Cell>Height</Table.Cell>\n                                            <Table.Cell>{zook.physical.height} cm</Table.Cell>\n                                        </Table.Row>\n                                        <Table.Row>\n                                            <Table.Cell>Length</Table.Cell>\n                                            <Table.Cell>{zook.physical.length} cm</Table.Cell>\n                                        </Table.Row>\n                                        <Table.Row>\n                                            <Table.Cell>Width</Table.Cell>\n                                            <Table.Cell>{zook.physical.width} cm</Table.Cell>\n                                        </Table.Row>\n                                        <Table.Row>\n                                            <Table.Cell>Weight</Table.Cell>\n                                            <Table.Cell>{zook.physical.weight} kg</Table.Cell>\n                                        </Table.Row>\n                                        <Table.Row>\n                                            <Table.Cell>Components</Table.Cell>\n                                            <Table.Cell>{zook.physical.components}</Table.Cell>\n                                        </Table.Row>\n                                    </Table.Body>\n                                </Table>\n                                <Table celled striped unstackable color=\"green\">\n                                    <Table.Header>\n                                        <Table.Row>\n                                            <Table.HeaderCell colSpan={3}>Achievements</Table.HeaderCell>\n                                        </Table.Row>\n                                        <Table.Row>\n                                            <Table.HeaderCell>Trial</Table.HeaderCell>\n                                            <Table.HeaderCell>Result</Table.HeaderCell>\n                                            <Table.HeaderCell>Position</Table.HeaderCell>\n                                        </Table.Row>\n                                    </Table.Header>\n                                    <Table.Body>\n                                        <Trial trial={zook.achievement.sprint} trialName=\"Sprint\"\n                                               measurement=\"cm/sec\"/>\n                                        <Trial trial={zook.achievement.blockPush} trialName=\"Block Push\"\n                                               measurement=\"cm\"/>\n                                        <Trial trial={zook.achievement.hurdles} trialName=\"Hurdles\"\n                                               measurement=\"cm/sec\"/>\n                                        <Trial trial={zook.achievement.highJump} trialName=\"High Jump\"\n                                               measurement=\"cm\"/>\n                                        <Trial trial={zook.achievement.lap} trialName=\"Lap\"\n                                               measurement=\"sec\"/>\n                                        <Trial trial={zook.achievement.overall} trialName=\"Overall\"\n                                               measurement=\"\" extraStyle={overallRowStyle}/>\n                                    </Table.Body>\n                                </Table>\n                            </Grid.Column>\n                        </div>\n                    </Grid>\n                </Segment>\n            </Segment.Group>\n        )\n    }\n}\n\nexport default Zook","import React, {Component} from 'react';\nimport {Header, Icon, List, Loader, Segment} from \"semantic-ui-react\";\nimport {TZookIdentifier} from \"../types/TZookIdentifier\";\nimport {Link} from \"react-router-dom\";\nimport ZookApi from \"../api/ZookApi\";\n\ninterface IZooksProps {\n\n}\n\ninterface IZooksState {\n    loading: boolean\n    zooks: TZookIdentifier[],\n}\n\nexport default class Zooks extends Component<IZooksProps,IZooksState> {\n    state = {\n        loading: true,\n        zooks: []\n    }\n\n    async componentDidMount() {\n        ZookApi.getZooks().then(response =>\n            this.setState({\n                loading: false,\n                zooks: response.data\n            })\n        )\n    }\n\n    render() {\n        if (this.state.loading) {\n            return <Loader active inline='centered'/>;\n        } else {\n            const zookItems = this.state.zooks.map(({id, name}) => (\n                <List.Item as={Link} to={`/zooks/${id}`} key={id}>\n                    <Icon name='bug' inverted/>\n                    <List.Content>\n                        <List.Header>{id} - <b>{name}</b></List.Header>\n                    </List.Content>\n                </List.Item>\n            ))\n            return (\n                <Segment.Group>\n                    <Segment>\n                        <Header size=\"huge\">\n                            Zooks\n                        </Header>\n                    </Segment>\n                    <Segment>\n                        <List divided selection size='large'>\n                            {zookItems}\n                        </List>\n                    </Segment>\n                </Segment.Group>\n            )\n        }\n    }\n}","import React, {Component} from 'react';\nimport {Header, Icon, List, Loader, Segment} from \"semantic-ui-react\";\nimport {TUserIdentifier} from \"../types/TUserIdentifier\";\nimport {Link} from \"react-router-dom\";\nimport UserApi from \"../api/UserApi\";\n\n\ninterface IUsersProps {\n\n}\n\ninterface IUsersState {\n    loading: boolean\n    users: TUserIdentifier[],\n}\n\nexport default class Users extends Component<IUsersProps, IUsersState> {\n    state = {\n        loading: true,\n        users: []\n    }\n\n    async componentDidMount() {\n        UserApi.listUsers().then(response =>\n            this.setState({\n                loading: false,\n                users: response.data\n            })\n        )\n    }\n\n    render() {\n        if (this.state.loading) {\n            return <Loader active inline='centered'/>;\n        } else {\n            const userItems = this.state.users.map(({username}) => (\n                <List.Item as={Link} to={`/users/${username}`} key={username}>\n                    <Icon name='user' inverted/>\n                    <List.Content>\n                        <List.Header>{username}</List.Header>\n                    </List.Content>\n                </List.Item>\n            ))\n            return (\n                <Segment.Group>\n                    <Segment>\n                        <Header size=\"huge\">\n                            Users\n                        </Header>\n                    </Segment>\n                    <Segment>\n                        <List divided selection size='large'>\n                            {userItems}\n                        </List>\n                    </Segment>\n                </Segment.Group>\n            )\n        }\n    }\n}","import React, {FC, useEffect, useState} from \"react\";\nimport {useHistory, useParams} from \"react-router\";\nimport {Header, Icon, List, Loader, Segment, Table} from \"semantic-ui-react\";\nimport {Link} from \"react-router-dom\";\nimport {TUser} from \"../types/TUser\";\nimport UserApi from \"../api/UserApi\";\n\ninterface RouteParams {\n    username: string\n}\n\nconst User: FC = () => {\n    let {username} = useParams<RouteParams>()\n    let history = useHistory()\n\n    const [user, setUser] = useState<TUser>();\n\n    useEffect(() => {\n        UserApi.getUser(username).then(response => {\n                history.replace(response.data.identifier.username)\n                setUser(response.data)\n            }\n        )\n    }, [username, history])\n\n\n    if (user) {\n        const zookItems = user.zooks.map(({id, name}) => (\n            <List.Item as={Link} to={`/zooks/${id}`} key={id}>\n                <Icon name='bug' inverted/>\n                <List.Content>\n                    <List.Header>{id} - <b>{name}</b></List.Header>\n                </List.Content>\n            </List.Item>\n        ))\n\n\n        return <Segment.Group>\n            <Segment clearing attached='top'>\n                <Header floated=\"left\" size='huge' style={{margin: 0}}>\n                    User: {user.identifier.username}\n                </Header>\n            </Segment>\n            <Table attached='top' celled striped unstackable color=\"green\">\n                <Table.Header>\n                    <Table.Row>\n                        <Table.HeaderCell colSpan='2'>About</Table.HeaderCell>\n                    </Table.Row>\n                </Table.Header>\n                <Table.Body>\n                    <Table.Row>\n                        <Table.Cell>Signed Up</Table.Cell>\n                        <Table.Cell>{user.about.signUpAt}</Table.Cell>\n                    </Table.Row>\n                    <Table.Row>\n                        <Table.Cell>Last Logged In</Table.Cell>\n                        <Table.Cell>{user.about.lastLoginAt}</Table.Cell>\n                    </Table.Row>\n                    <Table.Row>\n                        <Table.Cell>Uploaded Zooks</Table.Cell>\n                        <Table.Cell>{zookItems.length}</Table.Cell>\n                    </Table.Row>\n                </Table.Body>\n            </Table>\n\n            <Segment attached>\n                <List divided selection size='large'>\n                    {zookItems}\n                </List>\n            </Segment>\n        </Segment.Group>\n    } else {\n\n        return <Segment><Loader active inline='centered'/></Segment>\n    }\n}\n\nexport default User","import {AxiosResponse} from \"axios\";\n\nimport http from \"./api\";\nimport {TLeagues} from \"../types/TLeagues\";\nimport {TLeague} from \"../types/TLeague\";\n\nnamespace LeagueApi {\n\n    export async function getLeagues(): Promise<AxiosResponse<TLeagues>> {\n        return http.get<TLeagues>('/leagues')\n    }\n\n    export async function getLeague(league: string): Promise<AxiosResponse<TLeague>> {\n        return http.get<TLeague>(`/leagues/${league}`)\n    }\n\n\n}\n\nexport default LeagueApi","import React, {FC, useEffect, useState} from \"react\";\nimport {Card, Grid, Header, Image, Placeholder, Segment} from \"semantic-ui-react\";\nimport {Link} from \"react-router-dom\";\nimport {TLeagues} from \"../types/TLeagues\";\nimport LeagueApi from \"../api/LeagueApi\";\n\nconst Leagues: FC = () => {\n    const [leagues, setLeagues] = useState<TLeagues>()\n\n    useEffect(() => {\n        LeagueApi.getLeagues().then(response => {\n                setLeagues(response.data)\n            }\n        )\n    }, [])\n\n    let leagueCard = (league: string, id: number | undefined, name: string, description: string) => {\n        return (\n            <Card as={Link} to={`/leagues/${league}`}>\n                {id ? (\n                    <Image src={`${process.env.REACT_APP_STATIC_URL}/zooks/${id}/image.png`} wrapped ui={false}/>\n                ) : (\n                    <Placeholder>\n                        <Placeholder.Image square/>\n                    </Placeholder>\n                )}\n                <Card.Content>\n                    <Card.Header>{name}</Card.Header>\n                    <Card.Description>\n                        {description}\n                    </Card.Description>\n                </Card.Content>\n\n            </Card>\n        )\n    }\n\n    return (\n        <Segment.Group>\n            <Segment>\n                <Header size=\"huge\">\n                    Leagues\n                </Header>\n            </Segment>\n            <Segment>\n                <Grid stackable>\n                    <Grid.Row columns={3}>\n                        <Grid.Column>\n                            {leagueCard('sprint', leagues?.sprint, 'Sprint', 'Which is the fastest Zook in the world? Check the Sprint Trial League.')}\n                        </Grid.Column>\n                        <Grid.Column>\n                            {leagueCard('high_jump', leagues?.high_jump, 'High Jump', 'The Zooks are jumping higher and higher, but which is the highest?')}\n                        </Grid.Column>\n                        <Grid.Column>\n                            {leagueCard('lap', leagues?.lap, 'Single Lap', 'Whose Zook can run a lap faster than all the other Zooks?')}\n                        </Grid.Column>\n                    </Grid.Row>\n                    <Grid.Row columns={3}>\n                        <Grid.Column>\n                            {leagueCard('block_push', leagues?.block_push, 'Block Push', 'There\\'s some stiff competition in the Block Push Trial League...')}\n                        </Grid.Column>\n                        <Grid.Column>\n                            {leagueCard('hurdles', leagues?.hurdles, 'Hurdles', 'Which Zook does the best at getting over the hurdles?')}\n                        </Grid.Column>\n                        <Grid.Column>\n                            {leagueCard('overall_league', leagues?.overall_league, 'Overall', 'Which Zook is has the best scores across all the leagues?')}\n                        </Grid.Column>\n                    </Grid.Row>\n                </Grid>\n\n            </Segment>\n        </Segment.Group>\n    )\n}\n\nexport default Leagues","import React, {FC, useEffect, useState} from \"react\"\nimport {Header, Image, Loader, Segment, Table} from \"semantic-ui-react\"\nimport {TLeague} from \"../types/TLeague\";\nimport LeagueApi from \"../api/LeagueApi\";\n\ninterface ILeagueProps {\n    league: string\n    title: string\n    measurement: string\n}\n\nconst League: FC<ILeagueProps> = (props) => {\n\n    const [league, setLeague] = useState<TLeague>()\n\n    useEffect(() => {\n        LeagueApi.getLeague(props.league).then(response => {\n            setLeague(response.data)\n        })\n    }, [props.league])\n\n    const zookItems = (league: TLeague) => league.entries.map(({zookId, name, score, position}) => (\n        <Table.Row key={zookId}>\n            <Table.Cell><b>{position === 2147483647 ? '--' : position}</b></Table.Cell>\n            <Table.Cell><b>{score}&nbsp;{props.measurement}</b></Table.Cell>\n            <a href={\"/zooks/\" + zookId}\n               style={{display: 'contents', color: \"rgba(0,0,0,.87)\", verticalAlign: \"middle\"}}>\n                <Table.Cell>\n                    <b>{name}</b>\n                </Table.Cell>\n            </a>\n            <Table.Cell>\n                {\n                    position < 6 ?\n                        <Image src={`${process.env.REACT_APP_STATIC_URL}/zooks/${zookId}/image.png`}\n                               size={position === 1 ? \"small\" : \"tiny\"}/> : null\n                }\n            </Table.Cell>\n        </Table.Row>\n    ))\n\n    const loader = <Loader active inline='centered'/>\n\n    return <>\n        <Segment.Group>\n            <Segment>\n                <Header size=\"huge\">\n                    {props.title} League\n                </Header>\n            </Segment>\n            <Segment secondary inverted size='tiny' style={{paddingTop: \"6px\", paddingBottom: \"6px\"}}>\n                <b>Updated : {league?.updatedAt}</b>\n            </Segment>\n            <Segment>\n                <Table basic='very' selectable unstackable>\n                    <Table.Header>\n                        <Table.Row>\n                            <Table.HeaderCell collapsing>Position</Table.HeaderCell>\n                            <Table.HeaderCell collapsing>Score</Table.HeaderCell>\n                            <Table.HeaderCell collapsing>Zook</Table.HeaderCell>\n                        </Table.Row>\n                    </Table.Header>\n                    <Table.Body>\n                        {league ? zookItems(league) : loader}\n                    </Table.Body>\n                </Table>\n            </Segment>\n        </Segment.Group>\n    </>\n\n\n}\n\nexport default League","import {AxiosResponse} from \"axios\";\n\nimport http from \"./api\";\n\nnamespace AdminApi {\n\n    export async function setOwner(zookId?: string, ownerId?: string): Promise<AxiosResponse> {\n        return http.patch(`admin/zook/${zookId}/owner/${ownerId}`)\n    }\n\n}\n\nexport default AdminApi","import React, {FC, useState} from \"react\";\nimport {Button, Form, Header, Icon, Message, Segment, Table} from \"semantic-ui-react\";\nimport {AxiosError, AxiosResponse} from \"axios\";\nimport {useRegisterAction} from \"../actions/AuthAction\";\nimport {TAvailability} from \"../types/TAvailability\";\nimport UserApi from \"../api/UserApi\";\nimport {InputOnChangeData} from \"semantic-ui-react/dist/commonjs/elements/Input/Input\";\n\nenum RegisterState {\n    Available,\n    UnAvailable,\n    Error\n}\n\nconst Register: FC = () => {\n\n    const [availability, setAvailability] = useState<RegisterState>()\n\n    const [loading, setLoading] = useState<boolean>(false)\n    const [checkLoading, setCheckLoading] = useState<boolean>(false)\n\n    const [username, setUsername] = useState<string>(\"\")\n    const [usernameValid, setUsernameValid] = useState<boolean>(false)\n\n    const register: (code: string) => Promise<void> = useRegisterAction()\n\n    const usernameChange = (_: React.ChangeEvent<HTMLInputElement>, data: InputOnChangeData) => {\n        setAvailability(undefined)\n        setUsername(data.value)\n        setUsernameValid(/^[A-Za-z0-9_]{3,20}$/.test(data.value))\n    }\n\n    const checkAvailability = () => {\n        setCheckLoading(true)\n        UserApi.checkUsername(username).then((response: AxiosResponse<TAvailability>) => {\n                if (response.data.available) {\n                    setAvailability(RegisterState.Available)\n                } else {\n                    setAvailability(RegisterState.UnAvailable)\n                }\n                setCheckLoading(false)\n            }\n        ).catch((error: AxiosError) => {\n            setAvailability(RegisterState.Error)\n            setCheckLoading(false)\n        })\n    }\n\n    const handleSubmit = async () => {\n        setLoading(true)\n        if (availability === RegisterState.Available) {\n            await register(username)\n        }\n    }\n\n    return <>\n        <Segment.Group>\n            <Segment clearing attached='top'>\n                <Header floated=\"left\" size='huge' style={{margin: 0}}>\n                    Register Username\n                </Header>\n            </Segment>\n            <Segment attached>\n                <Table compact color=\"orange\" inverted>\n                    <Table.Header>\n                        <Table.Row>\n                            <Table.HeaderCell> <Icon name='attention'/> Username Cannot be\n                                changed</Table.HeaderCell>\n                        </Table.Row>\n                    </Table.Header>\n                    <Table.Body>\n                        <Table.Row>\n                            <Table.Cell error>\n                                <Icon name='attention'/>Usernames can be between 3 and 20 characters long.</Table.Cell>\n                        </Table.Row>\n                        <Table.Row>\n                            <Table.Cell error>\n                                <Icon name='attention'/>Usernames may contain UPPER and lower letters (A-Z,a-z), numbers\n                                (0-9) and underscore (_).</Table.Cell>\n                        </Table.Row>\n                    </Table.Body>\n                </Table>\n            </Segment>\n            <Segment attached>\n                <Form onSubmit={handleSubmit} success={availability === RegisterState.Available}\n                      error={availability === RegisterState.UnAvailable || availability === RegisterState.Error}\n                      loading={loading}>\n\n                    <Form.Group widths='equal'>\n                        <Button type='button' disabled={!usernameValid} onClick={checkAvailability}\n                                loading={checkLoading}>Check Availability</Button>\n                        <Form.Input\n                            label='Username'\n                            value={username}\n                            onChange={usernameChange}\n                            error={!usernameValid || availability === RegisterState.UnAvailable || availability === RegisterState.Error}\n                            loading={checkLoading}\n                        />\n                    </Form.Group>\n\n                    <Message\n                        success\n                        header='Username Is Available'\n                        content=\"REMEMBER YOU CAN ONLY SET THIS ONCE\"\n                    />\n                    <Message\n                        hidden={availability !== RegisterState.UnAvailable}\n                        error\n                        header='Username Not Available'\n                    />\n                    <Message\n                        hidden={availability !== RegisterState.Error || !usernameValid}\n                        error\n                        header='Username Is Invalid'\n                    />\n\n                    <Button type='submit' disabled={availability !== RegisterState.Available}>Submit</Button>\n                </Form>\n            </Segment>\n        </Segment.Group>\n    </>\n\n}\n\nexport default Register","import React, {ChangeEvent, FC, useEffect, useState} from 'react';\nimport {Button, Dropdown, Form, Header, Segment} from \"semantic-ui-react\";\nimport {AxiosError, AxiosResponse} from 'axios';\nimport {TUserIdentifier} from \"../types/TUserIdentifier\";\nimport UserApi from \"../api/UserApi\";\nimport AdminApi from \"../api/AdminApi\";\n\nconst Admin: FC = () => {\n    const [loading, setLoading] = useState<boolean>(false)\n    const [users, setUsers] = useState<TUserIdentifier[]>([])\n\n    useEffect(() => {\n        setLoading(true)\n        UserApi.listUsers().then(response => {\n                setLoading(false)\n                setUsers(response.data)\n            }\n        )\n    }, [])\n\n\n    const [ownerSetZookId, setOwnerSetZookId] = useState<string>()\n    const [ownerSetOwner, setOwnerSetOwner] = useState<string>()\n\n\n    const [updateOwnerResponse, setUpdateOwnerResponse] = useState<AxiosResponse>()\n\n    const updateOwner = () => {\n        setLoading(true)\n        AdminApi.setOwner(ownerSetZookId, ownerSetOwner).then((response: AxiosResponse) => {\n                setUpdateOwnerResponse(response)\n                setLoading(false)\n            }\n        ).catch((error: AxiosError) => {\n            setLoading(false)\n            setUpdateOwnerResponse(error.response)\n        })\n    }\n\n    return (\n        <Segment.Group>\n            <Segment>\n                <Header size=\"huge\">\n                    Admin Tools\n                </Header>\n            </Segment>\n            <Segment loading={loading}>\n                <Header size=\"medium\">\n                    Zook Owner Assigner\n                </Header>\n                <Form onSubmit={updateOwner}>\n                    <Form.Group widths='equal'>\n                        <Form.Field>\n                            <label>ZookId</label>\n                            <input name=\"zookId\" placeholder='Zook Id' type=\"number\" inputMode=\"numeric\"\n                                   onChange={(event: ChangeEvent<HTMLInputElement>) => setOwnerSetZookId(event.target.value)}/>\n                        </Form.Field>\n                        <Form.Field>\n                            <label>Owner</label>\n                            <Dropdown\n                                name=\"owner\"\n                                clearable\n                                options={users.map(({username}) => ({\n                                    text: username,\n                                    value: username\n                                }))}\n                                selection\n                                onChange={(event, data) => setOwnerSetOwner(data.value as string)}\n                            />\n                        </Form.Field>\n                    </Form.Group>\n                    <Button type='submit'>Update</Button>\n                    <pre>Response: {updateOwnerResponse?.status} - {JSON.stringify(updateOwnerResponse?.data)}</pre>\n                </Form>\n\n\n            </Segment>\n        </Segment.Group>\n    )\n\n}\n\nexport default Admin","import React, {FC} from \"react\";\nimport {useSelector} from \"react-redux\";\nimport {ApplicationState} from \"../redux/rootReducer\";\nimport {isRegistering, UserState} from \"../redux/userReducer\";\nimport {Redirect, Route, Switch} from \"react-router-dom\";\nimport Home from \"./Home\";\nimport Login from \"./Login\";\nimport Upload from \"./Upload\";\nimport Zook from \"./Zook\";\nimport Zooks from \"./Zooks\";\nimport Users from \"./Users\";\nimport User from \"./User\";\nimport Leagues from \"./Leagues\";\nimport League from \"./League\";\nimport Admin from \"./Admin\";\nimport Register from \"./Register\";\n\n\nconst Routes: FC = () => {\n\n    const userState = useSelector<ApplicationState, UserState>(state => state.user)\n\n    if (isRegistering(userState)) {\n        return <Switch>\n            <Route path=\"/login\" exact component={Register}/>\n            <Redirect to=\"/login\"/>\n        </Switch>\n    } else {\n        return <Switch>\n            <Route path=\"/\" exact component={Home}/>\n            <Route path=\"/login\" exact component={Login}/>\n\n            <Route path=\"/zooks/upload\" exact component={Upload}/>\n            <Route path=\"/zooks/:id\" component={Zook}/>\n            <Route path=\"/zooks\" exact component={Zooks}/>\n\n            <Route path=\"/users\" exact component={Users}/>\n            <Route path=\"/users/:username\" component={User}/>\n\n            <Route path=\"/leagues\" exact component={Leagues}/>\n            <Route path=\"/leagues/sprint\"\n                   render={props => <League {...props} league=\"sprint\" title=\"Sprint\"\n                                            measurement=\"cm/sec\"/>}/>\n            <Route path=\"/leagues/block_push\"\n                   render={props => <League {...props} league=\"block_push\" title=\"Block Push\"\n                                            measurement=\"cm\"/>}/>\n            <Route path=\"/leagues/hurdles\"\n                   render={props => <League {...props} league=\"hurdles\" title=\"Hurdles\"\n                                            measurement=\"cm/sec\"/>}/>\n            <Route path=\"/leagues/high_jump\"\n                   render={props => <League {...props} league=\"high_jump\" title=\"High Jump\"\n                                            measurement=\"cm\"/>}/>\n            <Route path=\"/leagues/lap\"\n                   render={props => <League {...props} league=\"lap\" title=\"Lap\"\n                                            measurement=\"sec\"/>}/>\n\n            <Route path=\"/leagues/overall_league\"\n                   render={props => <League {...props} league=\"overall_league\" title=\"Overall\"\n                                            measurement=\"\"/>}/>\n\n            <Route path=\"/admin\" exact component={Admin}/>\n\n            <Redirect to=\"/\"/>\n        </Switch>\n\n    }\n\n}\n\nexport default Routes","import React, {FC, useEffect} from 'react';\nimport './App.css';\nimport {BrowserRouter as Router} from \"react-router-dom\";\nimport Menu from \"./components/Menu\";\nimport {Container} from \"semantic-ui-react\";\nimport Routes from \"./components/Routes\";\nimport {useLoginLoadAction} from \"./actions/AuthAction\";\n\n\nconst App: FC = () => {\n\n    const loginLoadAction = useLoginLoadAction()\n\n    useEffect(loginLoadAction, [loginLoadAction]);\n\n    return (\n        <Router>\n            <Menu/>\n            <Container>\n                <Routes/>\n            </Container>\n        </Router>\n    )\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {combineReducers} from 'redux'\nimport {userReducer, initialUserState, UserState} from \"./userReducer\";\n\nexport interface ApplicationState {\n  user: UserState\n}\n\nexport const initialState: ApplicationState = {\n    user: initialUserState\n};\n\n\nexport const rootReducer = combineReducers<ApplicationState>({\n  user: userReducer\n})\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {CookiesProvider} from \"react-cookie\";\nimport 'semantic-ui-css/semantic.min.css'\nimport {createStore, Store} from 'redux'\nimport {Provider as StoreProvider} from \"react-redux\";\nimport {ApplicationState, rootReducer} from \"./redux/rootReducer\";\nimport {devToolsEnhancer} from \"redux-devtools-extension/index\";\n\nconst store: Store<ApplicationState> = createStore(rootReducer, devToolsEnhancer({}));\n\nReactDOM.render(\n    <React.StrictMode>\n        <CookiesProvider>\n            <StoreProvider store={store}>\n                <App/>\n            </StoreProvider>\n        </CookiesProvider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}