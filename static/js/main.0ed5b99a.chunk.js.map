{"version":3,"sources":["components/Menu.tsx","components/Home.tsx","api/config.js","api/zook.js","components/Zooks.tsx","components/Leagues.tsx","components/Trial.tsx","components/Zook.tsx","components/Upload.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Menu","props","state","activeItem","handleItemClick","e","to","setState","location","pathname","this","Container","Item","as","Link","active","onClick","Component","withRouter","Home","API_URL","ApiZook","fetch","method","headers","Headers","then","response","json","id","formData","body","Zooks","loading","zooks","getList","value","Loader","inline","zookItems","map","name","List","href","Header","divided","relaxed","Leagues","Trial","trail","Table","Row","Cell","trialName","score","measurement","position","Zook","zook","dateCreated","dateUploaded","height","length","width","weight","components","sprint","blockPush","hurdles","highJump","lap","match","params","get","Segment","Group","clearing","attached","floated","size","style","margin","Grid","stackable","className","Column","flex","src","minWidth","maxWidth","color","icon","fluid","content","celled","striped","unstackable","HeaderCell","colSpan","Body","Upload","isLoading","error","FormData","zookid","onFormSubmit","bind","onChange","preventDefault","upload","undefined","event","append","target","files","Form","onSubmit","Message","header","Field","type","accept","Sprint","BlockPush","Hurdles","HighJump","Lap","Boolean","window","hostname","ReactDOM","render","path","exact","children","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.0ed5b99a.chunk.js","sourcesContent":["import React, {Component} from 'react'\nimport {Container, Menu as SMenu} from 'semantic-ui-react'\nimport {Link, withRouter} from \"react-router-dom\";\n\nclass Menu extends Component {\n    state = {activeItem: '/'}\n\n    constructor(props: any) {\n        super(props);\n        this.state = {activeItem: props.location.pathname}\n    }\n\n\n    handleItemClick = (e: any, {to}: any) => this.setState({activeItem: to})\n\n\n    render() {\n        const {activeItem} = this.state\n\n        return (\n            <Container>\n                <SMenu>\n                    <SMenu.Item\n                        as={Link}\n                        to='/'\n                        active={activeItem === '/'}\n                        onClick={this.handleItemClick}>\n                        ZookLabs\n                    </SMenu.Item>\n\n                    <SMenu.Item\n                        as={Link}\n                        to='/zooks'\n                        active={activeItem === '/zooks'}\n                        onClick={this.handleItemClick}>\n                        Zooks\n                    </SMenu.Item>\n\n                    <SMenu.Item\n                        as={Link}\n                        to='/leagues'\n                        active={activeItem === '/leagues'}\n                        onClick={this.handleItemClick}>\n                        Leagues\n                    </SMenu.Item>\n\n                    <SMenu.Item\n                        as={Link}\n                        to='/zooks/upload'\n                        active={activeItem === '/zooks/upload'}\n                        onClick={this.handleItemClick}>\n                        Upload\n                    </SMenu.Item>\n                </SMenu>\n            </Container>\n        )\n    }\n}\n\n// @ts-ignore\nexport default withRouter(Menu)","import React from 'react';\n\nfunction Home() {\n  return (\n      <h1>Welcome To Zook Labs</h1>\n  );\n}\n\nexport default Home;\n","const API_URL = \"https://zooklabs.herokuapp.com\";\n\nexport default API_URL;\n","import API_URL from './config';\n\nexport default class ApiZook {\n\n    // get a list of zooks\n    static getList() {\n        return fetch(`${API_URL}/api/zooks`, {\n            method: 'get',\n            headers: new Headers({'content-type': 'application/json'})\n        }).then(response => response.json());\n    }\n\n    // get zook detail\n    static get(id) {\n        return fetch(`${API_URL}/api/zooks/${id}`, {\n            method: 'get',\n            headers: new Headers({'content-type': 'application/json'})\n        }).then(response => response.json());\n    }\n\n\n    static upload(formData) {\n        return fetch(`${API_URL}/api/zooks/upload`, {\n            method: 'post',\n            body: formData,\n        }).then(response => response.json());\n\n    }\n}","import React, {Component} from 'react';\nimport ApiZook from \"../api/zook\";\nimport {List, Loader} from \"semantic-ui-react\";\n\nexport default class Zooks extends Component {\n\n    state = {\n        loading: true,\n        zooks: [],\n    };\n\n    async componentDidMount() {\n        ApiZook.getList().then(value => this.setState({\n            loading: false,\n            zooks: value,\n        }));\n    };\n\n    render() {\n\n        if (this.state.loading) {\n            return <Loader active inline='centered'/>;\n        } else {\n            const zookItems = this.state.zooks.map(({id, name}) => (\n                <List.Item as='a' href={\"/zooks/\" + id}>\n                    <List.Header>{name}</List.Header>\n                </List.Item>\n            ))\n            return (\n                <List divided relaxed>\n                    {zookItems}\n\n\n                </List>\n\n            )\n        }\n    }\n}","import {Link} from \"react-router-dom\";\nimport React from \"react\";\n\nfunction Leagues() {\n    return (\n        <div>\n            <h2>Leagues</h2>\n            <ul>\n                <li>\n                    <Link to=\"/leagues/sprint\">Sprint</Link>\n                </li>\n                <li>\n                    <Link to=\"/leagues/blockpush\">BlockPush</Link>\n                </li>\n                <li>\n                    <Link to=\"/leagues/hurdles\">Hurdles</Link>\n                </li>\n                <li>\n                    <Link to=\"/leagues/highjump\">HighJump</Link>\n                </li>\n                <li>\n                    <Link to=\"/leagues/lap\">Lap</Link>\n                </li>\n            </ul>\n        </div>\n    );\n}\n\nexport default Leagues","import React from \"react\";\nimport {Table} from \"semantic-ui-react\";\n\nfunction Trial(props: any) {\n    if (props.trail == null) {\n        return (\n            <Table.Row>\n                <Table.Cell>{props.trialName}</Table.Cell>\n                <Table.Cell>N/A</Table.Cell>\n                <Table.Cell>N/A</Table.Cell>\n            </Table.Row>\n        );\n    } else {\n        return (\n            <Table.Row>\n                <Table.Cell>{props.trialName}</Table.Cell>\n                <Table.Cell>{props.trail.score} {props.measurement}</Table.Cell>\n                <Table.Cell>{props.trail.position === 2147483647 ? '--' : props.trail.position}</Table.Cell>\n            </Table.Row>\n        );\n    }\n}\n\nexport default Trial","import React, {Component} from 'react';\nimport ApiZook from \"../api/zook\";\nimport Trial from \"./Trial\";\nimport {Grid, Table, Segment, Header, Loader, Image} from 'semantic-ui-react';\nimport Button from \"semantic-ui-react/dist/commonjs/elements/Button\";\n\nexport default class Zook extends Component {\n\n    state = {\n        loading: true,\n        zook: {\n            id: null,\n            name: null,\n            dateCreated: null,\n            dateUploaded: null,\n            height: null,\n            length: null,\n            width: null,\n            weight: null,\n            components: null,\n            sprint: null,\n            blockPush: null,\n            hurdles: null,\n            highJump: null,\n            lap: null\n        },\n        id: null\n    };\n\n\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            ...this.state,\n            id: props.match.params.id\n        };\n    }\n\n\n    async componentDidMount() {\n        ApiZook.get(this.state.id).then(value => this.setState({\n            ...this.state,\n            loading: false,\n            zook: value,\n        }));\n    };\n\n    render() {\n        if (this.state.loading) {\n            return <Loader active inline='centered'/>;\n        } else {\n\n            return (\n                <Segment.Group>\n                    <Segment clearing attached='top'>\n                        <Header floated=\"left\" size='huge' style={{margin: 0}}>\n                            Zook Name: {this.state.zook.name}\n                        </Header>\n                        <Header floated=\"right\" size='huge'>\n                            Zook ID: {this.state.zook.id}\n                        </Header>\n                    </Segment>\n                    <Segment attached>\n                        <Grid stackable>\n                            <div className=\"two column row ui segment attached\">\n                                <Grid.Column style={{flex: \"0\"}}>\n                                    <img src={\"http://static.zooklabs.com/zooks/\" + this.state.zook.id + \"/image.png\"}\n                                         style={{minWidth: 256, maxWidth: 256}}/>\n                                    <Button color='blue' as=\"a\" icon=\"download\" fluid content=\"Download Zook\"\n                                            href={\"http://static.zooklabs.com/zooks/\" + this.state.zook.id + \"/\" + this.state.zook.name + \".zook\"}/>\n                                </Grid.Column>\n                                <Grid.Column style={{flex: \"1\"}}>\n                                    <Table celled striped unstackable color=\"green\">\n                                        <Table.Header>\n                                            <Table.Row>\n                                                <Table.HeaderCell colSpan='2'>About</Table.HeaderCell>\n                                            </Table.Row>\n                                        </Table.Header>\n                                        <Table.Body>\n                                            <Table.Row>\n                                                <Table.Cell>Owner</Table.Cell>\n                                                <Table.Cell>N/A</Table.Cell>\n                                            </Table.Row>\n                                            <Table.Row>\n                                                <Table.Cell>Birth/Adoption date</Table.Cell>\n                                                <Table.Cell>{this.state.zook.dateCreated}</Table.Cell>\n                                            </Table.Row>\n                                            <Table.Row>\n                                                <Table.Cell>Date of Upload</Table.Cell>\n                                                <Table.Cell>{this.state.zook.dateUploaded}</Table.Cell>\n                                            </Table.Row>\n                                            <Table.Row>\n                                                <Table.Cell>Number of Downloads</Table.Cell>\n                                                <Table.Cell>N/A</Table.Cell>\n                                            </Table.Row>\n                                            <Table.Row>\n                                                <Table.Cell>Number of times viewed</Table.Cell>\n                                                <Table.Cell>N/A</Table.Cell>\n                                            </Table.Row>\n                                        </Table.Body>\n                                    </Table>\n                                </Grid.Column>\n                            </div>\n                            <div className=\"column row ui segment attached\">\n                                <Grid.Column>\n                                    <Table celled striped unstackable color=\"green\">\n                                        <Table.Header>\n                                            <Table.Row>\n                                                <Table.HeaderCell colSpan='2'>Physical\n                                                    Information</Table.HeaderCell>\n                                            </Table.Row>\n                                        </Table.Header>\n                                        <Table.Body>\n                                            <Table.Row>\n                                                <Table.Cell>Height</Table.Cell>\n                                                <Table.Cell>{this.state.zook.height} cm</Table.Cell>\n                                            </Table.Row>\n                                            <Table.Row>\n                                                <Table.Cell>Length</Table.Cell>\n                                                <Table.Cell>{this.state.zook.length} cm</Table.Cell>\n                                            </Table.Row>\n                                            <Table.Row>\n                                                <Table.Cell>Width</Table.Cell>\n                                                <Table.Cell>{this.state.zook.width} cm</Table.Cell>\n                                            </Table.Row>\n                                            <Table.Row>\n                                                <Table.Cell>Weight</Table.Cell>\n                                                <Table.Cell>{this.state.zook.weight} kg</Table.Cell>\n                                            </Table.Row>\n                                            <Table.Row>\n                                                <Table.Cell>Components</Table.Cell>\n                                                <Table.Cell>{this.state.zook.components}</Table.Cell>\n                                            </Table.Row>\n                                        </Table.Body>\n                                    </Table>\n                                    <Table celled striped unstackable color=\"green\">\n                                        <Table.Header>\n                                            <Table.Row>\n                                                <Table.HeaderCell colSpan={3}>Achievements</Table.HeaderCell>\n                                            </Table.Row>\n                                            <Table.Row stackable={false}>\n                                                <Table.HeaderCell>Trial</Table.HeaderCell>\n                                                <Table.HeaderCell>Result</Table.HeaderCell>\n                                                <Table.HeaderCell>Position</Table.HeaderCell>\n                                            </Table.Row>\n                                        </Table.Header>\n                                        <Table.Body>\n                                            <Trial trail={this.state.zook.sprint} trialName=\"Sprint\"\n                                                   measurement=\"cm/sec\"/>\n                                            <Trial trail={this.state.zook.blockPush} trialName=\"Block Push\"\n                                                   measurement=\"cm\"/>\n                                            <Trial trail={this.state.zook.hurdles} trialName=\"Hurdles\"\n                                                   measurement=\"cm/sec\"/>\n                                            <Trial trail={this.state.zook.highJump} trialName=\"High Jump\"\n                                                   measurement=\"cm\"/>\n                                            <Trial trail={this.state.zook.lap} trialName=\"Lap\"\n                                                   measurement=\"sec\"/>\n                                        </Table.Body>\n                                    </Table>\n                                </Grid.Column>\n                            </div>\n                        </Grid>\n                    </Segment>\n                </Segment.Group>\n            )\n        }\n    };\n}\n","import React, {Component} from 'react'\nimport ApiZook from \"../api/zook\";\nimport {Button, Form, Header, Message, Segment} from 'semantic-ui-react'\nimport {Redirect} from 'react-router-dom';\n\nclass Upload extends Component {\n    state = {\n        isLoading: false,\n        error: '',\n        formData: new FormData(),\n        zookid: 0\n    }\n\n    constructor(props: any) {\n        super(props);\n        this.onFormSubmit = this.onFormSubmit.bind(this);\n        this.onChange = this.onChange.bind(this);\n    }\n\n    onFormSubmit(e: any) {\n        e.preventDefault(); // Stop form submit\n        if (this.state.formData.get('zook') === null) {\n            this.setState({error: 'Please Select A Zook', isLoading: false});\n        } else {\n            this.setState({isLoading: true});\n            ApiZook.upload(this.state.formData).then(response => {\n                if (response.id !== undefined) {\n                    this.setState({zookid: response.id, error: ''})\n                } else if (response.error !== undefined) {\n                    this.setState({error: response.error, isLoading: false});\n                } else {\n                    this.setState({error: 'Something Went Wrong', isLoading: false});\n                }\n            })\n        }\n    }\n\n    onChange(event: any) {\n        const formData = new FormData();\n        formData.append('zook', event.target.files[0]);\n        this.setState({\n            formData: formData\n        });\n    }\n\n    render() {\n        if (this.state.zookid !== 0) {\n            return <Redirect to={'/zooks/' + this.state.zookid}/>\n        }\n        return (\n            <Segment.Group>\n                <Segment>\n                    <Header>\n                        Zook Upload\n                    </Header>\n                </Segment>\n                <Segment>\n                    <Form error={this.state.error !== ''} loading={this.state.isLoading} onSubmit={this.onFormSubmit}>\n                        <Message\n                            error\n                            header='Error'\n                            content={this.state.error}\n                        />\n                        <Form.Field>\n                            <label>Zook File</label>\n                            <input type='file' onChange={this.onChange} accept=\".zook\"/>\n                        </Form.Field>\n                        <Button type=\"submit\">Upload</Button>\n                    </Form>\n                </Segment>\n            </Segment.Group>\n        )\n    }\n}\n\n\nexport default Upload","import React from 'react';\nimport './App.css';\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\n\n\nimport Menu from './components/Menu'\nimport Home from \"./components/Home\";\nimport {Container} from \"semantic-ui-react\";\nimport Zooks from \"./components/Zooks\";\nimport Leagues from \"./components/Leagues\";\nimport Zook from \"./components/Zook\";\nimport Upload from \"./components/Upload\";\n\n\nexport default function App() {\n    return (\n            <Router>\n                <Menu/>\n                <Container>\n                    <Switch>\n                        <Route path=\"/\" exact children={Home}/>\n                        <Route path=\"/zooks/upload\" exact component={Upload}/>\n                        <Route path=\"/zooks/:id\" component={Zook}/>\n                        <Route path=\"/zooks\" exact component={Zooks}/>\n                        <Route path=\"/leagues\" exact children={Leagues}/>\n                        <Route path=\"/leagues/sprint\" children={Sprint}/>\n                        <Route path=\"/leagues/blockpush\" children={BlockPush}/>\n                        <Route path=\"/leagues/hurdles\" children={Hurdles}/>\n                        <Route path=\"/leagues/highjump\" children={HighJump}/>\n                        <Route path=\"/leagues/lap\" children={Lap}/>\n                    </Switch>\n                </Container>\n            </Router>\n    );\n}\n\n\nfunction Sprint() {\n    return (\n        <div>\n            <h3>Sprint</h3>\n        </div>\n    );\n}\n\nfunction BlockPush() {\n    return (\n        <div>\n            <h3>BlockPush</h3>\n        </div>\n    );\n}\n\nfunction Hurdles() {\n    return (\n        <div>\n            <h3>Hurdles</h3>\n        </div>\n    );\n}\n\nfunction HighJump() {\n    return (\n        <div>\n            <h3>HighJump</h3>\n        </div>\n    );\n}\n\nfunction Lap() {\n    return (\n        <div>\n            <h3>Lap</h3>\n        </div>\n    );\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}