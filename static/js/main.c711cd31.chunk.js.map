{"version":3,"sources":["redux/userReducer.ts","redux/loginActionTypes.ts","api/api.ts","api/UserApi.ts","actions/AuthAction.ts","redux/userActions.ts","components/LoginButton.tsx","components/Menu.tsx","components/Home.tsx","components/Login.tsx","api/ZookApi.ts","components/Upload.tsx","components/Trial.tsx","components/LoadingZookImage.tsx","components/Zook.tsx","components/Zooks.tsx","components/Users.tsx","components/User.tsx","api/LeagueApi.ts","components/Leagues.tsx","components/League.tsx","api/AdminApi.ts","components/Register.tsx","components/Admin.tsx","components/Routes.tsx","App.tsx","serviceWorker.ts","redux/rootReducer.ts","index.tsx"],"names":["UserLoginState","LOGIN","REGISTER","LOGOUT","initialUserState","state","LoggedOut","api","axios","create","baseURL","process","headers","withCredentials","username","a","get","post","code","UserApi","useDispatchLogin","dispatch","useDispatch","useCallback","token","decodedToken","defaults","common","setAuthorization","splitbee","user","set","type","useLogoutAction","useCookies","removeCookie","track","reset","useLoginResponseAction","setCookie","dispatchLogin","response","data","Error","exp","jwt_decode","maxAge","Math","floor","Date","now","sameSite","secure","LoginButton","userState","useSelector","logout","LoggedIn","Menu","position","to","activeClassName","className","isActive","_","pathname","Item","Button","active","onClick","primary","Registering","color","zookRegex","Container","exact","style","padding","src","alt","paddingLeft","test","href","Icon","name","inverted","Home","Segment","Group","Header","size","Divider","Grid","columns","stackable","textAlign","verticalAlign","vertical","hidden","Row","Column","List","Content","Image","Login","login","loginResponseAction","loginUser","then","useLoginAction","location","useLocation","history","useHistory","useState","loading","setLoading","discordUrl","useEffect","URLSearchParams","search","replace","window","Loader","inline","push","id","formData","ZookApi","Upload","zookId","setZookId","fileValid","setFileValid","FormData","setFormData","uploadError","setUploadError","Table","compact","HeaderCell","Body","Cell","error","Form","onSubmit","uploadZook","catch","Field","onChange","event","file","target","files","item","undefined","endsWith","append","accept","Message","header","icon","disabled","content","Trial","props","trial","extraStyle","trialName","score","measurement","disqualified","Label","LoadingZookImage","onLoad","zookid","overallRowStyle","backgroundColor","Zook","zook","setZook","useParams","getZook","clearing","attached","floated","margin","identifier","flex","minWidth","marginBottom","as","fluid","celled","striped","unstackable","colSpan","about","owner","dateCreated","dateUploaded","downloads","views","physical","height","length","width","weight","components","achievement","sprint","blockPush","hurdles","highJump","lap","overall","Zooks","zooks","getZooks","setState","this","zookItems","map","Link","divided","selection","Component","Users","users","listUsers","userItems","User","setUser","getUser","signUpAt","lastLoginAt","league","LeagueApi","Leagues","leagues","setLeagues","getLeagues","leagueCard","description","Card","wrapped","ui","Placeholder","square","Description","high_jump","block_push","overall_league","League","setLeague","getLeague","loader","title","secondary","paddingTop","paddingBottom","updatedAt","basic","selectable","collapsing","entries","display","ownerId","patch","AdminApi","RegisterState","Admin","setUsers","ownerSetZookId","setOwnerSetZookId","ownerSetOwner","setOwnerSetOwner","updateOwnerResponse","setUpdateOwnerResponse","setOwner","widths","placeholder","inputMode","value","Dropdown","clearable","options","text","status","JSON","stringify","Register","availability","setAvailability","checkLoading","setCheckLoading","setUsername","usernameValid","setUsernameValid","register","registerUser","useRegisterAction","handleSubmit","Available","success","UnAvailable","checkUsername","available","Input","label","Routes","isRegistering","path","component","render","App","init","disableCookie","loginLoadAction","cookies","useLoginLoadAction","Boolean","hostname","match","rootReducer","combineReducers","action","store","createStore","devToolsEnhancer","ReactDOM","StrictMode","CookiesProvider","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.c711cd31.chunk.js","sourcesContent":["import {LOGIN, LoginActionTypes, LOGOUT, REGISTER} from \"./loginActionTypes\";\n\n\nexport enum UserLoginState {\n    LoggedOut,\n    LoggedIn,\n    Registering\n}\n\ninterface State {\n    state: UserLoginState\n}\n\ninterface LoggedIn extends State {\n    username: string\n    state: UserLoginState.LoggedIn\n}\n\n\ninterface LoggedOut extends State {\n    state: UserLoginState.LoggedOut\n}\n\ninterface Registering extends State {\n    state: UserLoginState.Registering\n}\n\nexport type UserState = LoggedIn | LoggedOut | Registering\n\nexport const isLoggedIn = (userState: UserState) => {\n    return userState.state === UserLoginState.LoggedIn\n}\n\nexport const isRegistering = (userState: UserState) => {\n    return userState.state === UserLoginState.Registering\n}\n\nexport const isLoggedOut = (userState: UserState) => {\n    return userState.state === UserLoginState.LoggedOut\n}\n\n\nexport const initialUserState: UserState = {\n    state: UserLoginState.LoggedOut\n}\n\nexport function userReducer(\n    state = initialUserState,\n    action: LoginActionTypes\n):  UserState {\n    switch (action.type) {\n        case LOGIN:\n            return {\n                state: UserLoginState.LoggedIn,\n                username: action.username\n            }\n        case REGISTER:\n            return {\n                state: UserLoginState.Registering\n            }\n        case LOGOUT:\n            return {\n                state: UserLoginState.LoggedOut\n            }\n        default:\n            return state\n    }\n}","export const LOGIN = 'LOGIN'\nexport const REGISTER = 'REGISTER'\nexport const LOGOUT = 'LOGOUT'\n\ninterface LoginAction {\n  type: typeof LOGIN\n  username: string\n}\n\ninterface RegisterAction {\n  type: typeof REGISTER\n}\n\ninterface LogoutAction {\n  type: typeof LOGOUT\n}\n\nexport type LoginActionTypes = LoginAction | RegisterAction | LogoutAction","import axios, {AxiosInstance} from 'axios';\n\nconst api: AxiosInstance = axios.create(\n    {\n        baseURL: `${process.env.REACT_APP_API_URL}/api`,\n        headers: {'Content-Type': 'application/json'},\n        withCredentials: true\n    });\n\nexport default api\n\nexport function removeAuthorization() {\n    // @ts-ignore\n    delete api.defaults.headers.common[\"Authorization\"]\n}\n\nexport function setAuthorization(token: string) {\n    api.defaults.headers.common['Authorization'] = `Bearer ${token}`\n}\n\n","import {AxiosResponse} from \"axios\";\nimport {TAvailability} from \"../types/TAvailability\";\nimport api from \"./api\";\nimport {TUserIdentifier} from \"../types/TUserIdentifier\";\nimport {TUser} from \"../types/TUser\";\n\nnamespace UserApi {\n    export async function checkUsername(username: string): Promise<AxiosResponse<TAvailability>> {\n        return api.get<TAvailability>(`/login/availability/${username}`)\n    }\n\n    export async function registerUser(username: string): Promise<AxiosResponse> {\n        return api.post(`/login/register`, {username: username})\n    }\n\n    export async function loginUser(code: string): Promise<AxiosResponse> {\n        return api.get(`/login?code=${code}`)\n    }\n\n    export async function listUsers(): Promise<AxiosResponse<TUserIdentifier[]>> {\n        return api.get<TUserIdentifier[]>('/users')\n    }\n\n    export async function getUser(username: string): Promise<AxiosResponse<TUser>> {\n        return api.get<TUser>(`/users/${username}`)\n    }\n}\n\nexport default UserApi","import jwt_decode from \"jwt-decode\";\nimport {LoginUser, LogoutUser, RegisterUser} from \"../redux/userActions\";\nimport {useDispatch} from \"react-redux\";\nimport {useCookies} from \"react-cookie\";\nimport {removeAuthorization, setAuthorization} from \"../api/api\";\nimport {AxiosResponse} from \"axios\";\nimport UserApi from \"../api/UserApi\";\nimport {useCallback} from \"react\";\nimport splitbee from '@splitbee/web';\n\n\ntype JwtToken = {\n    username?: string\n    exp: number\n}\n\nconst maxAge = (exp: number) => exp - Math.floor(Date.now() / 1000)\n\nexport function useDispatchLogin() {\n    const dispatch = useDispatch()\n    return useCallback((token: string, decodedToken: JwtToken) => {\n        setAuthorization(token)\n        if (decodedToken.username) {\n            splitbee.user.set({\n                username: decodedToken.username\n            })\n            dispatch(LoginUser(decodedToken.username))\n        } else {\n            dispatch(RegisterUser())\n        }\n    }, [dispatch])\n}\n\nexport function useLoginLoadAction() {\n    const [cookies] = useCookies(['token'])\n    const dispatchLogin = useDispatchLogin()\n\n    return useCallback(() => {\n        let token: string | undefined = cookies.token\n        if (token) {\n            let decodedToken = jwt_decode<JwtToken>(token)\n            dispatchLogin(token, decodedToken)\n        }\n    }, [cookies.token, dispatchLogin])\n}\n\nexport function useLogoutAction() {\n    const dispatch = useDispatch()\n    const [, , removeCookie] = useCookies()\n    return useCallback(() => {\n        removeAuthorization()\n        removeCookie(\"token\")\n        splitbee.track(\"User Logout\")\n        splitbee.reset()\n        dispatch(LogoutUser())\n    }, [removeCookie, dispatch])\n}\n\n\nfunction useLoginResponseAction() {\n    const [, setCookie] = useCookies()\n    const dispatchLogin = useDispatchLogin()\n\n    return useCallback((response: AxiosResponse<string>) => {\n        let token = response.data\n        if (token) {\n            let decodedToken = jwt_decode<JwtToken>(token)\n\n            setCookie(\"token\", token, {maxAge: maxAge(decodedToken.exp), sameSite: \"strict\", secure: true})\n\n            dispatchLogin(token, decodedToken)\n        } else {\n            throw new Error(\"body missing\")\n        }\n    }, [setCookie, dispatchLogin])\n}\n\nexport function useRegisterAction() {\n    const loginResponseAction = useLoginResponseAction()\n    return useCallback((username: string) => {\n        splitbee.track(\"Register Username\", {\n                username: username\n            }\n        )\n        return UserApi.registerUser(username).then(loginResponseAction)\n    }, [loginResponseAction])\n}\n\nexport function useLoginAction() {\n    const loginResponseAction = useLoginResponseAction()\n    return useCallback((code: string) => {\n        splitbee.track(\"User Login\")\n        return UserApi.loginUser(code).then(loginResponseAction)\n    }, [loginResponseAction])\n}\n\n","import {LOGIN, LoginActionTypes, LOGOUT, REGISTER} from \"./loginActionTypes\";\n\n\nexport function LoginUser(username: string): LoginActionTypes {\n  return {\n    type: LOGIN,\n    username: username\n  }\n}\n\nexport function RegisterUser(): LoginActionTypes {\n  return {\n    type: REGISTER\n  }\n}\n\nexport function LogoutUser(): LoginActionTypes {\n  return {\n    type: LOGOUT\n  }\n}","import {UserLoginState, UserState} from \"../redux/userReducer\";\nimport {Button, Menu as SMenu} from \"semantic-ui-react\";\nimport {NavLink} from \"react-router-dom\";\nimport React, {FC} from \"react\";\nimport {useLogoutAction} from \"../actions/AuthAction\";\nimport {useSelector} from \"react-redux\";\nimport {ApplicationState} from \"../redux/rootReducer\";\n\nconst LoginButton: FC = () => {\n\n    const userState = useSelector<ApplicationState, UserState>(state => state.user)\n\n    const logout = useLogoutAction()\n\n    switch (userState.state) {\n        case UserLoginState.LoggedIn:\n            let username = userState.username\n            return <SMenu.Menu position='right'>\n                <NavLink to={`/users/${username}`} activeClassName=\"active\" className=\"item\"\n                         isActive={(_, {pathname}) => {\n                             return `/users/${username}` === pathname\n                         }}\n                >{username}</NavLink>\n                <SMenu.Item>\n                    <Button active onClick={logout} primary>Logout</Button>\n                </SMenu.Item>\n            </SMenu.Menu>\n\n        case UserLoginState.LoggedOut:\n            return <SMenu.Menu position='right'>\n                <SMenu.Item>\n                    <NavLink to=\"/login\" activeClassName=\"active\" className=\"ui primary button\">Login</NavLink>\n                </SMenu.Item>\n            </SMenu.Menu>\n\n        case UserLoginState.Registering:\n            return <SMenu.Menu position='right'>\n                <SMenu.Item>\n                    <Button active onClick={logout} color='red' primary>Cancel</Button>\n                </SMenu.Item>\n            </SMenu.Menu>\n    }\n}\n\nexport default LoginButton","import React, {FC} from 'react'\nimport {Container, Icon, Menu as SMenu} from 'semantic-ui-react'\nimport {NavLink} from \"react-router-dom\";\nimport LoginButton from \"./LoginButton\";\n\n\nconst zookRegex = /^\\/zooks\\/?\\d*$/\n\nconst Menu: FC = () => {\n\n    return (\n        <Container>\n            <SMenu>\n                <NavLink to=\"/\" activeClassName=\"active\" className=\"item\" exact={true} style={{padding: 10}}>\n                    <img src={`${process.env.PUBLIC_URL}/logo.png`} alt={\"logo\"}/><b\n                    style={{paddingLeft: 10}}>ZookLabs</b></NavLink>\n                <NavLink to=\"/zooks\" activeClassName=\"active\" className=\"item\"\n                         isActive={(_, {pathname}) => {\n                             return zookRegex.test(pathname)\n                         }}\n                >Zooks</NavLink>\n                <NavLink to=\"/leagues\" activeClassName=\"active\" className=\"item\">Leagues</NavLink>\n                <NavLink to=\"/zooks/upload\" activeClassName=\"active\" className=\"item\" exact={true}>Upload</NavLink>\n                <NavLink to=\"/users\" activeClassName=\"active\" className=\"item\">Users</NavLink>\n                <LoginButton/>\n                <a className=\"discord item\" href=\"http://discord.zooklabs.com\" data-splitbee-event=\"External Link\"\n                   data-splitbee-event-destination=\"discord\"><Icon name='discord'\n                                                                   inverted/>Discord</a>\n            </SMenu>\n        </Container>\n    )\n}\n\nexport default Menu\n","import React from 'react';\nimport {Divider, Grid, Header, Image, Item, List, Segment} from \"semantic-ui-react\";\n\nfunction Home() {\n    return (\n        <Segment.Group>\n            <Segment>\n                <Header size=\"huge\">\n                    Welcome To ZookLabs!\n                </Header>\n                {process.env.REACT_APP_WELCOME_MESSAGE}\n                <Divider></Divider>\n\n                <Grid columns={2} stackable textAlign='left' verticalAlign='top'>\n                    <Divider vertical={true} hidden={true}></Divider>\n                    <Grid.Row verticalAlign='middle'>\n                        <Grid.Column>\n                            <List>\n                                <Item>\n                                    <List.Icon name='arrow up'/>\n                                    <List.Content>\n                                        This site allows you to upload, view and download zooks much like how you could\n                                        on the BBC site back in the day!\n                                    </List.Content>\n                                </Item>\n                                <Item>\n                                    <List.Icon name='user'/>\n                                    <List.Content>\n                                        You can either upload Zooks anonymously or register a username to upload them\n                                        under (requires a Discord account).\n                                    </List.Content>\n                                </Item>\n                                <Item>\n                                    <List.Icon name='trophy'/>\n                                    <List.Content>\n                                        If your zook has any trial scores, they will be ranked on the leagues, and if\n                                        your zook has been tested on every trial, it will be ranked in the overall\n                                        league!\n                                    </List.Content>\n                                </Item>\n                            </List>\n                        </Grid.Column>\n                        <Grid.Column>\n                            <Image src={`${process.env.PUBLIC_URL}/turtle_white.png`}/>\n                        </Grid.Column>\n                    </Grid.Row>\n                </Grid>\n\n            </Segment>\n\n        </Segment.Group>\n    );\n}\n\nexport default Home;\n","import React, {FC, useEffect, useState} from 'react';\nimport {useHistory, useLocation} from \"react-router\";\n\nimport {ApplicationState} from \"../redux/rootReducer\";\nimport {useSelector} from \"react-redux\";\nimport {Loader, Segment} from \"semantic-ui-react\";\nimport {Redirect} from \"react-router-dom\";\nimport {UserLoginState, UserState} from \"../redux/userReducer\";\nimport {useLoginAction} from \"../actions/AuthAction\";\n\nconst Login: FC = () => {\n\n    const userState = useSelector<ApplicationState, UserState>(state => state.user)\n\n    const login: (code: string) => Promise<void> = useLoginAction()\n\n    const location = useLocation()\n    const history = useHistory()\n\n    const [loading, setLoading] = useState<boolean>(true);\n\n    const discordUrl = `https://discord.com/api/oauth2/authorize?client_id=${process.env.REACT_APP_DISCORD_CLIENT_ID}&redirect_uri=${process.env.REACT_APP_DISCORD_CALLBACK_URL}&response_type=code&scope=identify`\n\n    useEffect(() => {\n        if (loading && userState.state === UserLoginState.LoggedOut) {\n            let code = new URLSearchParams(location.search).get(\"code\")\n            if (code) {\n                login(code).then(() => {\n                    history.replace(\"/login\")\n                    setLoading(false)\n                })\n            } else {\n                setLoading(false)\n            }\n        } else if (userState.state === UserLoginState.LoggedOut) {\n            window.location.replace(discordUrl)\n        } else if (userState.state === UserLoginState.LoggedIn) {\n            setLoading(false)\n        }\n\n    }, [loading, login, location.search, history, userState.state, discordUrl])\n\n    if (loading) {\n        return <Segment><Loader active inline='centered'/></Segment>\n    } else {\n        switch (userState.state) {\n            case UserLoginState.LoggedOut:\n                return <Segment>\n                    Redirecting to Discord.\n                    <a href={discordUrl}>Not Redirecting? Click Here!</a>\n                    <Loader active inline='centered'/>\n                </Segment>\n\n            case UserLoginState.Registering:\n                return <Segment><Loader active inline='centered'/></Segment>\n            case UserLoginState.LoggedIn:\n                return <Redirect push to={`/users/${userState.username}`}/>\n        }\n    }\n}\n\nexport default Login\n","import {AxiosResponse} from \"axios\";\nimport {TZookIdentifier} from \"../types/TZookIdentifier\";\nimport api from \"./api\";\nimport {TUploadResponse} from \"../types/TUploadResponse\";\nimport {TZook} from \"../types/TZook\";\n\nnamespace ZookApi {\n    export async function getZooks(): Promise<AxiosResponse<TZookIdentifier[]>> {\n        return api.get<TZookIdentifier[]>('/zooks')\n    }\n\n    export async function getZook(id: string): Promise<AxiosResponse<TZook>> {\n        return api.get<TZook>(`zooks/${id}`)\n    }\n\n    export async function uploadZook(formData: FormData): Promise<AxiosResponse<TUploadResponse>> {\n        return api.post('zooks/upload', formData, {\n            headers: {\n                'Content-Type': 'multipart/form-data'\n            }\n        })\n    }\n}\n\nexport default ZookApi","import React, {FC, useState} from 'react'\nimport {Button, Form, Header, Icon, Message, Segment, Table} from 'semantic-ui-react'\nimport {Redirect} from 'react-router-dom';\nimport {AxiosError} from \"axios\";\nimport ZookApi from \"../api/ZookApi\";\nimport splitbee from \"@splitbee/web\";\n\ntype TUploadError = {\n    error: string\n}\n\nconst Upload: FC = () => {\n    const [zookId, setZookId] = useState<number>()\n    const [loading, setLoading] = useState<boolean>(false)\n    const [fileValid, setFileValid] = useState<boolean>(false)\n\n    const [formData, setFormData] = useState<FormData>(new FormData())\n\n    const [uploadError, setUploadError] = useState<string>()\n\n    const handleSubmit = () => {\n        if (formData.get('zook')) {\n            setLoading(true)\n            splitbee.track(\"Zook Upload\")\n            ZookApi.uploadZook(formData).then(response => {\n                    setZookId(response.data.id)\n                    setLoading(false)\n                }\n            ).catch((error: AxiosError<TUploadError>) => {\n                setFileValid(false)\n                setLoading(false)\n                if (error.response) {\n                    setUploadError(error.response.data.error)\n                    splitbee.track(\"Zook Upload Error\", {\n                        error: error.response.data.error\n                    })\n                } else {\n                    splitbee.track(\"Unexpected Zook Upload Error\")\n                    throw error\n                }\n            })\n        }\n    }\n\n    const fileChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        let file = event.target.files?.item(0)\n        setUploadError(undefined)\n        if (file && file.name.endsWith(\".zook\")) {\n            const formData = new FormData()\n            formData.append('zook', file)\n            setFormData(formData)\n            setFileValid(true)\n        } else {\n            setFileValid(false)\n        }\n    }\n\n    if (zookId) {\n        return <Redirect to={`/zooks/${zookId}`}/>\n    } else {\n        return (\n            <Segment.Group>\n                <Segment>\n                    <Header size='huge'>\n                        Zook Upload\n                    </Header>\n                </Segment>\n                <Segment>\n                    <Table compact color=\"orange\" inverted>\n                        <Table.Header>\n                            <Table.Row>\n                                <Table.HeaderCell><Icon name='attention'/> Upload Requirements</Table.HeaderCell>\n                            </Table.Row>\n                        </Table.Header>\n                        <Table.Body>\n                            <Table.Row>\n                                <Table.Cell error>\n                                    <Icon name='attention'/>Must have a Passport Photo</Table.Cell>\n                            </Table.Row>\n                            <Table.Row>\n                                <Table.Cell error>\n                                    <Icon name='attention'/>Does not support Street Rules</Table.Cell>\n                            </Table.Row>\n                        </Table.Body>\n                    </Table>\n                </Segment>\n                <Segment>\n                    <Form onSubmit={handleSubmit} loading={loading} error={!!uploadError}>\n                        <Form.Field error={!!uploadError}>\n                            <label>Zook File</label>\n                            <input type='file'\n                                   onChange={fileChange}\n                                   accept=\".zook\"/>\n                        </Form.Field>\n                        <Message\n                            error\n                            header={uploadError}\n                        />\n                        <Button type=\"submit\" color='blue' icon=\"upload\" disabled={!fileValid} content=\"Upload Zook\"/>\n                    </Form>\n                </Segment>\n            </Segment.Group>\n        )\n    }\n}\n\nexport default Upload","import React, {FC} from \"react\";\nimport {Label, Table} from \"semantic-ui-react\";\n\nexport type TZookTrial = {\n    score: number\n    position: number\n    disqualified: boolean\n}\n\ntype ITrialProps = {\n    trialName: string\n    trial?: TZookTrial\n    measurement: string\n    extraStyle?: object\n}\n\nconst Trial: FC<ITrialProps> = (props) => {\n    if (props.trial) {\n        const position = (trial: TZookTrial) => {\n            if (trial.disqualified) {\n                return <Label color=\"red\">DISQUALIFIED</Label>\n            } else if (trial.position === 2147483647) {\n                return '--'\n            }\n            return trial.position\n        }\n        return (\n            <Table.Row style={props.extraStyle}>\n                <Table.Cell>{props.trialName}</Table.Cell>\n                <Table.Cell>{props.trial.score} {props.measurement}</Table.Cell>\n                <Table.Cell>{position(props.trial)}</Table.Cell>\n            </Table.Row>\n        )\n    } else {\n        return (\n            <Table.Row>\n                <Table.Cell>{props.trialName}</Table.Cell>\n                <Table.Cell>N/A</Table.Cell>\n                <Table.Cell>N/A</Table.Cell>\n            </Table.Row>\n        )\n    }\n}\n\nexport default Trial\n","import React, {FC, useState} from \"react\";\nimport {Image} from \"semantic-ui-react\";\n\ninterface LoadingZookImageProps {\n    zookid: number,\n    alt?: string\n}\n\nconst LoadingZookImage: FC<LoadingZookImageProps & React.HTMLProps<HTMLDivElement>> = (props) => {\n\n    const [loading, setLoading] = useState<Boolean>(true)\n\n    let loaded = () => {\n        setLoading(false)\n    }\n\n    let imageClass: () => string = () => {\n        if (loading) {\n            return \"square image\"\n        } else {\n            return \"\"\n        }\n    }\n\n    return <>\n        <div {...props} className=\"ui placeholder\" >\n            <Image className={imageClass()} onLoad={loaded}\n                   src={`${process.env.REACT_APP_STATIC_URL}/zooks/${props.zookid}/image.png`} alt={props.alt}/>\n        </div>\n    </>\n\n}\n\nexport default LoadingZookImage","import React, {FC, useEffect, useState} from 'react';\nimport Trial from \"./Trial\";\nimport {Grid, Header, Loader, Segment, Table} from 'semantic-ui-react';\nimport Button from \"semantic-ui-react/dist/commonjs/elements/Button\";\nimport {useParams} from \"react-router\";\nimport {Link} from \"react-router-dom\";\nimport LoadingZookImage from \"./LoadingZookImage\";\nimport ZookApi from \"../api/ZookApi\";\nimport {TZook} from \"../types/TZook\";\n\n\ninterface RouteParams {\n    id: string\n}\n\nlet overallRowStyle = {\n    backgroundColor: \"#2185d0\",\n    color: \"#FFF\"\n};\n\nconst Zook: FC = () => {\n    const [zook, setZook] = useState<TZook>();\n    let {id} = useParams<RouteParams>()\n\n    useEffect(() => {\n        ZookApi.getZook(id).then(response =>\n            setZook(response.data)\n        )\n    }, [id])\n\n    if (!zook) {\n        return <Loader active inline='centered'/>;\n    } else {\n\n        const owner = () => {\n            if (zook.about.owner) {\n                return (<Table.Cell>\n                    <Link to={`/users/${zook.about.owner.username}`}>{zook.about.owner.username}</Link>\n                </Table.Cell>)\n            } else {\n                return <Table.Cell>Anonymous</Table.Cell>\n            }\n        }\n        return (\n            <Segment.Group>\n                <Segment clearing attached='top'>\n                    <Header floated=\"left\" size='huge' style={{margin: 0}}>\n                        Zook Name: {zook.identifier.name}\n                    </Header>\n                    <Header floated=\"right\" size='huge'>\n                        Zook ID: {zook.identifier.id}\n                    </Header>\n                </Segment>\n                <Segment attached>\n                    <Grid stackable>\n                        <div className=\"two column row ui segment attached\">\n                            <Grid.Column style={{flex: \"0\"}}>\n                                <div style={{minWidth: 256}}>\n                                    <LoadingZookImage zookid={zook.identifier.id} alt={zook.identifier.name}\n                                                      style={{marginBottom: 10}}/>\n                                    <Button color='blue' as=\"a\" icon=\"download\" fluid\n                                            content=\"Download Zook\"\n                                            href={`${process.env.REACT_APP_API_URL}/static/zooks/${zook.identifier.id}/${zook.identifier.name}.zook`}/>\n                                </div>\n                            </Grid.Column>\n                            <Grid.Column style={{flex: \"1\"}}>\n                                <Table celled striped unstackable color=\"green\">\n                                    <Table.Header>\n                                        <Table.Row>\n                                            <Table.HeaderCell colSpan='2'>About</Table.HeaderCell>\n                                        </Table.Row>\n                                    </Table.Header>\n                                    <Table.Body>\n                                        <Table.Row>\n                                            <Table.Cell>Owner</Table.Cell>\n                                            {owner()}\n                                        </Table.Row>\n                                        <Table.Row>\n                                            <Table.Cell>Birth/Adoption date</Table.Cell>\n                                            <Table.Cell>{zook.about.dateCreated}</Table.Cell>\n                                        </Table.Row>\n                                        <Table.Row>\n                                            <Table.Cell>Date of Upload</Table.Cell>\n                                            <Table.Cell>{zook.about.dateUploaded}</Table.Cell>\n                                        </Table.Row>\n                                        <Table.Row>\n                                            <Table.Cell>Number of Downloads</Table.Cell>\n                                            <Table.Cell>{zook.about.downloads}</Table.Cell>\n                                        </Table.Row>\n                                        <Table.Row>\n                                            <Table.Cell>Number of times viewed</Table.Cell>\n                                            <Table.Cell>{zook.about.views}</Table.Cell>\n                                        </Table.Row>\n                                    </Table.Body>\n                                </Table>\n                            </Grid.Column>\n                        </div>\n                        <div className=\"column row ui segment attached\">\n                            <Grid.Column>\n                                <Table celled striped unstackable color=\"green\">\n                                    <Table.Header>\n                                        <Table.Row>\n                                            <Table.HeaderCell colSpan='2'>Physical Information</Table.HeaderCell>\n                                        </Table.Row>\n                                    </Table.Header>\n                                    <Table.Body>\n                                        <Table.Row>\n                                            <Table.Cell>Height</Table.Cell>\n                                            <Table.Cell>{zook.physical.height} cm</Table.Cell>\n                                        </Table.Row>\n                                        <Table.Row>\n                                            <Table.Cell>Length</Table.Cell>\n                                            <Table.Cell>{zook.physical.length} cm</Table.Cell>\n                                        </Table.Row>\n                                        <Table.Row>\n                                            <Table.Cell>Width</Table.Cell>\n                                            <Table.Cell>{zook.physical.width} cm</Table.Cell>\n                                        </Table.Row>\n                                        <Table.Row>\n                                            <Table.Cell>Weight</Table.Cell>\n                                            <Table.Cell>{zook.physical.weight} kg</Table.Cell>\n                                        </Table.Row>\n                                        <Table.Row>\n                                            <Table.Cell>Components</Table.Cell>\n                                            <Table.Cell>{zook.physical.components}</Table.Cell>\n                                        </Table.Row>\n                                    </Table.Body>\n                                </Table>\n                                <Table celled striped unstackable color=\"green\">\n                                    <Table.Header>\n                                        <Table.Row>\n                                            <Table.HeaderCell colSpan={3}>Achievements</Table.HeaderCell>\n                                        </Table.Row>\n                                        <Table.Row>\n                                            <Table.HeaderCell>Trial</Table.HeaderCell>\n                                            <Table.HeaderCell>Result</Table.HeaderCell>\n                                            <Table.HeaderCell>Position</Table.HeaderCell>\n                                        </Table.Row>\n                                    </Table.Header>\n                                    <Table.Body>\n                                        <Trial trial={zook.achievement.sprint} trialName=\"Sprint\"\n                                               measurement=\"cm/sec\"/>\n                                        <Trial trial={zook.achievement.blockPush} trialName=\"Block Push\"\n                                               measurement=\"cm\"/>\n                                        <Trial trial={zook.achievement.hurdles} trialName=\"Hurdles\"\n                                               measurement=\"cm/sec\"/>\n                                        <Trial trial={zook.achievement.highJump} trialName=\"High Jump\"\n                                               measurement=\"cm\"/>\n                                        <Trial trial={zook.achievement.lap} trialName=\"Lap\"\n                                               measurement=\"sec\"/>\n                                        <Trial trial={zook.achievement.overall} trialName=\"Overall\"\n                                               measurement=\"\" extraStyle={overallRowStyle}/>\n                                    </Table.Body>\n                                </Table>\n                            </Grid.Column>\n                        </div>\n                    </Grid>\n                </Segment>\n            </Segment.Group>\n        )\n    }\n}\n\nexport default Zook","import React, {Component} from 'react';\nimport {Header, Icon, List, Loader, Segment} from \"semantic-ui-react\";\nimport {TZookIdentifier} from \"../types/TZookIdentifier\";\nimport {Link} from \"react-router-dom\";\nimport ZookApi from \"../api/ZookApi\";\n\ninterface IZooksProps {\n\n}\n\ninterface IZooksState {\n    loading: boolean\n    zooks: TZookIdentifier[],\n}\n\nexport default class Zooks extends Component<IZooksProps,IZooksState> {\n    state = {\n        loading: true,\n        zooks: []\n    }\n\n    async componentDidMount() {\n        ZookApi.getZooks().then(response =>\n            this.setState({\n                loading: false,\n                zooks: response.data\n            })\n        )\n    }\n\n    render() {\n        if (this.state.loading) {\n            return <Loader active inline='centered'/>;\n        } else {\n            const zookItems = this.state.zooks.map(({id, name}) => (\n                <List.Item as={Link} to={`/zooks/${id}`} key={id}>\n                    <Icon name='bug' inverted/>\n                    <List.Content>\n                        <List.Header>{id} - <b>{name}</b></List.Header>\n                    </List.Content>\n                </List.Item>\n            ))\n            return (\n                <Segment.Group>\n                    <Segment>\n                        <Header size=\"huge\">\n                            Zooks\n                        </Header>\n                    </Segment>\n                    <Segment>\n                        <List divided selection size='large'>\n                            {zookItems}\n                        </List>\n                    </Segment>\n                </Segment.Group>\n            )\n        }\n    }\n}","import React, {Component} from 'react';\nimport {Header, Icon, List, Loader, Segment} from \"semantic-ui-react\";\nimport {TUserIdentifier} from \"../types/TUserIdentifier\";\nimport {Link} from \"react-router-dom\";\nimport UserApi from \"../api/UserApi\";\n\n\ninterface IUsersProps {\n\n}\n\ninterface IUsersState {\n    loading: boolean\n    users: TUserIdentifier[],\n}\n\nexport default class Users extends Component<IUsersProps, IUsersState> {\n    state = {\n        loading: true,\n        users: []\n    }\n\n    async componentDidMount() {\n        UserApi.listUsers().then(response =>\n            this.setState({\n                loading: false,\n                users: response.data\n            })\n        )\n    }\n\n    render() {\n        if (this.state.loading) {\n            return <Loader active inline='centered'/>;\n        } else {\n            const userItems = this.state.users.map(({username}) => (\n                <List.Item as={Link} to={`/users/${username}`} key={username}>\n                    <Icon name='user' inverted/>\n                    <List.Content>\n                        <List.Header>{username}</List.Header>\n                    </List.Content>\n                </List.Item>\n            ))\n            return (\n                <Segment.Group>\n                    <Segment>\n                        <Header size=\"huge\">\n                            Users\n                        </Header>\n                    </Segment>\n                    <Segment>\n                        <List divided selection size='large'>\n                            {userItems}\n                        </List>\n                    </Segment>\n                </Segment.Group>\n            )\n        }\n    }\n}","import React, {FC, useEffect, useState} from \"react\";\nimport {useHistory, useParams} from \"react-router\";\nimport {Header, Icon, List, Loader, Segment, Table} from \"semantic-ui-react\";\nimport {Link} from \"react-router-dom\";\nimport {TUser} from \"../types/TUser\";\nimport UserApi from \"../api/UserApi\";\n\ninterface RouteParams {\n    username: string\n}\n\nconst User: FC = () => {\n    let {username} = useParams<RouteParams>()\n    let history = useHistory()\n\n    const [user, setUser] = useState<TUser>();\n\n    useEffect(() => {\n        UserApi.getUser(username).then(response => {\n                history.replace(response.data.identifier.username)\n                setUser(response.data)\n            }\n        )\n    }, [username, history])\n\n\n    if (user) {\n        const zookItems = user.zooks.map(({id, name}) => (\n            <List.Item as={Link} to={`/zooks/${id}`} key={id}>\n                <Icon name='bug' inverted/>\n                <List.Content>\n                    <List.Header>{id} - <b>{name}</b></List.Header>\n                </List.Content>\n            </List.Item>\n        ))\n\n\n        return <Segment.Group>\n            <Segment clearing attached='top'>\n                <Header floated=\"left\" size='huge' style={{margin: 0}}>\n                    User: {user.identifier.username}\n                </Header>\n            </Segment>\n            <Table attached='top' celled striped unstackable color=\"green\">\n                <Table.Header>\n                    <Table.Row>\n                        <Table.HeaderCell colSpan='2'>About</Table.HeaderCell>\n                    </Table.Row>\n                </Table.Header>\n                <Table.Body>\n                    <Table.Row>\n                        <Table.Cell>Signed Up</Table.Cell>\n                        <Table.Cell>{user.about.signUpAt}</Table.Cell>\n                    </Table.Row>\n                    <Table.Row>\n                        <Table.Cell>Last Logged In</Table.Cell>\n                        <Table.Cell>{user.about.lastLoginAt}</Table.Cell>\n                    </Table.Row>\n                    <Table.Row>\n                        <Table.Cell>Uploaded Zooks</Table.Cell>\n                        <Table.Cell>{zookItems.length}</Table.Cell>\n                    </Table.Row>\n                </Table.Body>\n            </Table>\n\n            <Segment attached>\n                <List divided selection size='large'>\n                    {zookItems}\n                </List>\n            </Segment>\n        </Segment.Group>\n    } else {\n\n        return <Segment><Loader active inline='centered'/></Segment>\n    }\n}\n\nexport default User","import {AxiosResponse} from \"axios\";\n\nimport api from \"./api\";\nimport {TLeagues} from \"../types/TLeagues\";\nimport {TLeague} from \"../types/TLeague\";\n\nnamespace LeagueApi {\n\n    export async function getLeagues(): Promise<AxiosResponse<TLeagues>> {\n        return api.get<TLeagues>('/leagues')\n    }\n\n    export async function getLeague(league: string): Promise<AxiosResponse<TLeague>> {\n        return api.get<TLeague>(`/leagues/${league}`)\n    }\n\n\n}\n\nexport default LeagueApi","import React, {FC, useEffect, useState} from \"react\";\nimport {Card, Grid, Header, Image, Placeholder, Segment} from \"semantic-ui-react\";\nimport {Link} from \"react-router-dom\";\nimport {TLeagues} from \"../types/TLeagues\";\nimport LeagueApi from \"../api/LeagueApi\";\n\nconst Leagues: FC = () => {\n    const [leagues, setLeagues] = useState<TLeagues>()\n\n    useEffect(() => {\n        LeagueApi.getLeagues().then(response => {\n                setLeagues(response.data)\n            }\n        )\n    }, [])\n\n    let leagueCard = (league: string, id: number | undefined, name: string, description: string) => {\n        return (\n            <Card as={Link} to={`/leagues/${league}`}>\n                {id ? (\n                    <Image src={`${process.env.REACT_APP_STATIC_URL}/zooks/${id}/image.png`} wrapped ui={false}/>\n                ) : (\n                    <Placeholder>\n                        <Placeholder.Image square/>\n                    </Placeholder>\n                )}\n                <Card.Content>\n                    <Card.Header>{name}</Card.Header>\n                    <Card.Description>\n                        {description}\n                    </Card.Description>\n                </Card.Content>\n\n            </Card>\n        )\n    }\n\n    return (\n        <Segment.Group>\n            <Segment>\n                <Header size=\"huge\">\n                    Leagues\n                </Header>\n            </Segment>\n            <Segment>\n                <Grid stackable>\n                    <Grid.Row columns={3}>\n                        <Grid.Column>\n                            {leagueCard('sprint', leagues?.sprint, 'Sprint', 'Which is the fastest Zook in the world? Check the Sprint Trial League.')}\n                        </Grid.Column>\n                        <Grid.Column>\n                            {leagueCard('high_jump', leagues?.high_jump, 'High Jump', 'The Zooks are jumping higher and higher, but which is the highest?')}\n                        </Grid.Column>\n                        <Grid.Column>\n                            {leagueCard('lap', leagues?.lap, 'Single Lap', 'Whose Zook can run a lap faster than all the other Zooks?')}\n                        </Grid.Column>\n                    </Grid.Row>\n                    <Grid.Row columns={3}>\n                        <Grid.Column>\n                            {leagueCard('block_push', leagues?.block_push, 'Block Push', 'There\\'s some stiff competition in the Block Push Trial League...')}\n                        </Grid.Column>\n                        <Grid.Column>\n                            {leagueCard('hurdles', leagues?.hurdles, 'Hurdles', 'Which Zook does the best at getting over the hurdles?')}\n                        </Grid.Column>\n                        <Grid.Column>\n                            {leagueCard('overall_league', leagues?.overall_league, 'Overall', 'Which Zook is has the best scores across all the leagues?')}\n                        </Grid.Column>\n                    </Grid.Row>\n                </Grid>\n\n            </Segment>\n        </Segment.Group>\n    )\n}\n\nexport default Leagues","import React, {FC, useEffect, useState} from \"react\"\nimport {Header, Image, Loader, Segment, Table} from \"semantic-ui-react\"\nimport {TLeague} from \"../types/TLeague\";\nimport LeagueApi from \"../api/LeagueApi\";\n\ninterface ILeagueProps {\n    league: string\n    title: string\n    measurement: string\n}\n\nconst League: FC<ILeagueProps> = (props) => {\n\n    const [league, setLeague] = useState<TLeague>()\n\n    useEffect(() => {\n        LeagueApi.getLeague(props.league).then(response => {\n            setLeague(response.data)\n        })\n    }, [props.league])\n\n    const zookItems = (league: TLeague) => league.entries.map(({zookId, name, score, position}) => (\n        <Table.Row key={zookId}>\n            <Table.Cell><b>{position === 2147483647 ? '--' : position}</b></Table.Cell>\n            <Table.Cell><b>{score}&nbsp;{props.measurement}</b></Table.Cell>\n            <a href={\"/zooks/\" + zookId}\n               style={{display: 'contents', color: \"rgba(0,0,0,.87)\", verticalAlign: \"middle\"}}>\n                <Table.Cell>\n                    <b>{name}</b>\n                </Table.Cell>\n            </a>\n            <Table.Cell>\n                {\n                    position < 6 ?\n                        <Image src={`${process.env.REACT_APP_STATIC_URL}/zooks/${zookId}/image.png`}\n                               size={position === 1 ? \"small\" : \"tiny\"}/> : null\n                }\n            </Table.Cell>\n        </Table.Row>\n    ))\n\n    const loader = <Loader active inline='centered'/>\n\n    return <>\n        <Segment.Group>\n            <Segment>\n                <Header size=\"huge\">\n                    {props.title} League\n                </Header>\n            </Segment>\n            <Segment secondary inverted size='tiny' style={{paddingTop: \"6px\", paddingBottom: \"6px\"}}>\n                <b>Updated : {league?.updatedAt}</b>\n            </Segment>\n            <Segment>\n                <Table basic='very' selectable unstackable>\n                    <Table.Header>\n                        <Table.Row>\n                            <Table.HeaderCell collapsing>Position</Table.HeaderCell>\n                            <Table.HeaderCell collapsing>Score</Table.HeaderCell>\n                            <Table.HeaderCell collapsing>Zook</Table.HeaderCell>\n                        </Table.Row>\n                    </Table.Header>\n                    <Table.Body>\n                        {league ? zookItems(league) : loader}\n                    </Table.Body>\n                </Table>\n            </Segment>\n        </Segment.Group>\n    </>\n\n\n}\n\nexport default League","import {AxiosResponse} from \"axios\";\n\nimport api from \"./api\";\n\nnamespace AdminApi {\n\n    export async function setOwner(zookId?: string, ownerId?: string): Promise<AxiosResponse> {\n        return api.patch(`admin/zook/${zookId}/owner/${ownerId}`)\n    }\n\n}\n\nexport default AdminApi","import React, {FC, useState} from \"react\";\nimport {Button, Form, Header, Icon, Message, Segment, Table} from \"semantic-ui-react\";\nimport {AxiosError, AxiosResponse} from \"axios\";\nimport {useRegisterAction} from \"../actions/AuthAction\";\nimport {TAvailability} from \"../types/TAvailability\";\nimport UserApi from \"../api/UserApi\";\nimport {InputOnChangeData} from \"semantic-ui-react/dist/commonjs/elements/Input/Input\";\n\nenum RegisterState {\n    Available,\n    UnAvailable,\n    Error\n}\n\nconst Register: FC = () => {\n\n    const [availability, setAvailability] = useState<RegisterState>()\n\n    const [loading, setLoading] = useState<boolean>(false)\n    const [checkLoading, setCheckLoading] = useState<boolean>(false)\n\n    const [username, setUsername] = useState<string>(\"\")\n    const [usernameValid, setUsernameValid] = useState<boolean>(false)\n\n    const register: (code: string) => Promise<void> = useRegisterAction()\n\n    const usernameChange = (_: React.ChangeEvent<HTMLInputElement>, data: InputOnChangeData) => {\n        setAvailability(undefined)\n        setUsername(data.value)\n        setUsernameValid(/^[A-Za-z0-9_]{3,20}$/.test(data.value))\n    }\n\n    const checkAvailability = () => {\n        setCheckLoading(true)\n        UserApi.checkUsername(username).then((response: AxiosResponse<TAvailability>) => {\n                if (response.data.available) {\n                    setAvailability(RegisterState.Available)\n                } else {\n                    setAvailability(RegisterState.UnAvailable)\n                }\n                setCheckLoading(false)\n            }\n        ).catch((error: AxiosError) => {\n            setAvailability(RegisterState.Error)\n            setCheckLoading(false)\n        })\n    }\n\n    const handleSubmit = async () => {\n        setLoading(true)\n        if (availability === RegisterState.Available) {\n            await register(username)\n        }\n    }\n\n    return <>\n        <Segment.Group>\n            <Segment clearing attached='top'>\n                <Header floated=\"left\" size='huge' style={{margin: 0}}>\n                    Register Username\n                </Header>\n            </Segment>\n            <Segment attached>\n                <Table compact color=\"orange\" inverted>\n                    <Table.Header>\n                        <Table.Row>\n                            <Table.HeaderCell> <Icon name='attention'/> Username Cannot be\n                                changed</Table.HeaderCell>\n                        </Table.Row>\n                    </Table.Header>\n                    <Table.Body>\n                        <Table.Row>\n                            <Table.Cell error>\n                                <Icon name='attention'/>Usernames can be between 3 and 20 characters long.</Table.Cell>\n                        </Table.Row>\n                        <Table.Row>\n                            <Table.Cell error>\n                                <Icon name='attention'/>Usernames may contain UPPER and lower letters (A-Z,a-z), numbers\n                                (0-9) and underscore (_).</Table.Cell>\n                        </Table.Row>\n                    </Table.Body>\n                </Table>\n            </Segment>\n            <Segment attached>\n                <Form onSubmit={handleSubmit} success={availability === RegisterState.Available}\n                      error={availability === RegisterState.UnAvailable || availability === RegisterState.Error}\n                      loading={loading}>\n\n                    <Form.Group widths='equal'>\n                        <Button type='button' disabled={!usernameValid} onClick={checkAvailability}\n                                loading={checkLoading}>Check Availability</Button>\n                        <Form.Input\n                            label='Username'\n                            value={username}\n                            onChange={usernameChange}\n                            error={!usernameValid || availability === RegisterState.UnAvailable || availability === RegisterState.Error}\n                            loading={checkLoading}\n                        />\n                    </Form.Group>\n\n                    <Message\n                        success\n                        header='Username Is Available'\n                        content=\"REMEMBER YOU CAN ONLY SET THIS ONCE\"\n                    />\n                    <Message\n                        hidden={availability !== RegisterState.UnAvailable}\n                        error\n                        header='Username Not Available'\n                    />\n                    <Message\n                        hidden={availability !== RegisterState.Error || !usernameValid}\n                        error\n                        header='Username Is Invalid'\n                    />\n\n                    <Button type='submit' disabled={availability !== RegisterState.Available}>Submit</Button>\n                </Form>\n            </Segment>\n        </Segment.Group>\n    </>\n\n}\n\nexport default Register","import React, {ChangeEvent, FC, useEffect, useState} from 'react';\nimport {Button, Dropdown, Form, Header, Segment} from \"semantic-ui-react\";\nimport {AxiosError, AxiosResponse} from 'axios';\nimport {TUserIdentifier} from \"../types/TUserIdentifier\";\nimport UserApi from \"../api/UserApi\";\nimport AdminApi from \"../api/AdminApi\";\n\nconst Admin: FC = () => {\n    const [loading, setLoading] = useState<boolean>(false)\n    const [users, setUsers] = useState<TUserIdentifier[]>([])\n\n    useEffect(() => {\n        setLoading(true)\n        UserApi.listUsers().then(response => {\n                setLoading(false)\n                setUsers(response.data)\n            }\n        )\n    }, [])\n\n\n    const [ownerSetZookId, setOwnerSetZookId] = useState<string>()\n    const [ownerSetOwner, setOwnerSetOwner] = useState<string>()\n\n\n    const [updateOwnerResponse, setUpdateOwnerResponse] = useState<AxiosResponse>()\n\n    const updateOwner = () => {\n        setLoading(true)\n        AdminApi.setOwner(ownerSetZookId, ownerSetOwner).then((response: AxiosResponse) => {\n                setUpdateOwnerResponse(response)\n                setLoading(false)\n            }\n        ).catch((error: AxiosError) => {\n            setLoading(false)\n            setUpdateOwnerResponse(error.response)\n        })\n    }\n\n    return (\n        <Segment.Group>\n            <Segment>\n                <Header size=\"huge\">\n                    Admin Tools\n                </Header>\n            </Segment>\n            <Segment loading={loading}>\n                <Header size=\"medium\">\n                    Zook Owner Assigner\n                </Header>\n                <Form onSubmit={updateOwner}>\n                    <Form.Group widths='equal'>\n                        <Form.Field>\n                            <label>ZookId</label>\n                            <input name=\"zookId\" placeholder='Zook Id' type=\"number\" inputMode=\"numeric\"\n                                   onChange={(event: ChangeEvent<HTMLInputElement>) => setOwnerSetZookId(event.target.value)}/>\n                        </Form.Field>\n                        <Form.Field>\n                            <label>Owner</label>\n                            <Dropdown\n                                name=\"owner\"\n                                clearable\n                                options={users.map(({username}) => ({\n                                    text: username,\n                                    value: username\n                                }))}\n                                selection\n                                onChange={(event, data) => setOwnerSetOwner(data.value as string)}\n                            />\n                        </Form.Field>\n                    </Form.Group>\n                    <Button type='submit'>Update</Button>\n                    <pre>Response: {updateOwnerResponse?.status} - {JSON.stringify(updateOwnerResponse?.data)}</pre>\n                </Form>\n\n\n            </Segment>\n        </Segment.Group>\n    )\n\n}\n\nexport default Admin","import React, {FC} from \"react\";\nimport {useSelector} from \"react-redux\";\nimport {ApplicationState} from \"../redux/rootReducer\";\nimport {isRegistering, UserState} from \"../redux/userReducer\";\nimport {Redirect, Route, Switch} from \"react-router-dom\";\nimport Home from \"./Home\";\nimport Login from \"./Login\";\nimport Upload from \"./Upload\";\nimport Zook from \"./Zook\";\nimport Zooks from \"./Zooks\";\nimport Users from \"./Users\";\nimport User from \"./User\";\nimport Leagues from \"./Leagues\";\nimport League from \"./League\";\nimport Admin from \"./Admin\";\nimport Register from \"./Register\";\n\n\nconst Routes: FC = () => {\n\n    const userState = useSelector<ApplicationState, UserState>(state => state.user)\n\n    if (isRegistering(userState)) {\n        return <Switch>\n            <Route path=\"/login\" exact component={Register}/>\n            <Redirect to=\"/login\"/>\n        </Switch>\n    } else {\n        return <Switch>\n            <Route path=\"/\" exact component={Home}/>\n            <Route path=\"/login\" exact component={Login}/>\n\n            <Route path=\"/zooks/upload\" exact component={Upload}/>\n            <Route path=\"/zooks/:id\" component={Zook}/>\n            <Route path=\"/zooks\" exact component={Zooks}/>\n\n            <Route path=\"/users\" exact component={Users}/>\n            <Route path=\"/users/:username\" component={User}/>\n\n            <Route path=\"/leagues\" exact component={Leagues}/>\n            <Route path=\"/leagues/sprint\"\n                   render={props => <League {...props} league=\"sprint\" title=\"Sprint\"\n                                            measurement=\"cm/sec\"/>}/>\n            <Route path=\"/leagues/block_push\"\n                   render={props => <League {...props} league=\"block_push\" title=\"Block Push\"\n                                            measurement=\"cm\"/>}/>\n            <Route path=\"/leagues/hurdles\"\n                   render={props => <League {...props} league=\"hurdles\" title=\"Hurdles\"\n                                            measurement=\"cm/sec\"/>}/>\n            <Route path=\"/leagues/high_jump\"\n                   render={props => <League {...props} league=\"high_jump\" title=\"High Jump\"\n                                            measurement=\"cm\"/>}/>\n            <Route path=\"/leagues/lap\"\n                   render={props => <League {...props} league=\"lap\" title=\"Lap\"\n                                            measurement=\"sec\"/>}/>\n\n            <Route path=\"/leagues/overall_league\"\n                   render={props => <League {...props} league=\"overall_league\" title=\"Overall\"\n                                            measurement=\"\"/>}/>\n\n            <Route path=\"/admin\" exact component={Admin}/>\n\n            <Redirect to=\"/\"/>\n        </Switch>\n\n    }\n\n}\n\nexport default Routes","import React, {FC, useEffect} from 'react';\nimport './App.css';\nimport {BrowserRouter as Router} from \"react-router-dom\";\nimport Menu from \"./components/Menu\";\nimport {Container} from \"semantic-ui-react\";\nimport Routes from \"./components/Routes\";\nimport {useLoginLoadAction} from \"./actions/AuthAction\";\nimport splitbee from '@splitbee/web';\n\nconst App: FC = () => {\n    splitbee.init({disableCookie: true})\n\n    const loginLoadAction = useLoginLoadAction()\n\n    useEffect(loginLoadAction, [loginLoadAction]);\n\n    return (\n        <Router>\n            <Menu/>\n            <Container>\n                <Routes/>\n            </Container>\n        </Router>\n    )\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {combineReducers} from 'redux'\nimport {userReducer, initialUserState, UserState} from \"./userReducer\";\n\nexport interface ApplicationState {\n  user: UserState\n}\n\nexport const initialState: ApplicationState = {\n    user: initialUserState\n};\n\n\nexport const rootReducer = combineReducers<ApplicationState>({\n  user: userReducer\n})\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {CookiesProvider} from \"react-cookie\";\nimport 'semantic-ui-css/semantic.min.css'\nimport {createStore, Store} from 'redux'\nimport {Provider as StoreProvider} from \"react-redux\";\nimport {ApplicationState, rootReducer} from \"./redux/rootReducer\";\nimport {devToolsEnhancer} from \"redux-devtools-extension/index\";\n\nconst store: Store<ApplicationState> = createStore(rootReducer, devToolsEnhancer({}));\n\nReactDOM.render(\n    <React.StrictMode>\n        <CookiesProvider>\n            <StoreProvider store={store}>\n                <App/>\n            </StoreProvider>\n        </CookiesProvider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}